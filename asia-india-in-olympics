{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "84f4ee25",
   "metadata": {
    "papermill": {
     "duration": 1.778041,
     "end_time": "2023-08-25T04:37:37.199818",
     "exception": false,
     "start_time": "2023-08-25T04:37:35.421777",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# importing libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "323ebeba",
   "metadata": {
    "papermill": {
     "duration": 0.018754,
     "end_time": "2023-08-25T04:37:37.227133",
     "exception": false,
     "start_time": "2023-08-25T04:37:37.208379",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "noc = \"noc_regions.csv\"\n",
    "athlete = \"athlete_events.csv\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d5d2a45e",
   "metadata": {
    "papermill": {
     "duration": 1.042093,
     "end_time": "2023-08-25T04:37:38.277695",
     "exception": false,
     "start_time": "2023-08-25T04:37:37.235602",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#  define data \n",
    "athlete_events = pd.read_csv(athlete)\n",
    "noc_regions = pd.read_csv(noc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "555f298e",
   "metadata": {
    "papermill": {
     "duration": 0.180089,
     "end_time": "2023-08-25T04:37:38.466279",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.286190",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# merge data \n",
    "df = pd.merge(athlete_events, noc_regions, on='NOC', how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4951e0a1",
   "metadata": {
    "papermill": {
     "duration": 0.023015,
     "end_time": "2023-08-25T04:37:38.499135",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.476120",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Asian countries\n",
    "asia = [\"AFG\",\"ARM\",\"AZE\",\"BRN\",\"BAN\",\"BHU\",\"BRU\",\"CAM\",\"CHN\",\"HKG\",\"GEO\",\n",
    "        \"IND\",\"INA\",\"IRI\",\"IRQ\",\"ISR\",\"JPN\",\"JOR\",\"KAZ\",\"KUW\",\"KGZ\",\"LAO\",\n",
    "        \"LIB\",\"MAL\",\"MAS\",\"NBO\",\"MDV\",\"MRI\",\"MGL\",\"MYA\",\"NEP\",\"PRK\",\"OMA\",\n",
    "        \"PAK\",\"PLE\",\"PHI\",\"QAT\",\"KSA\",\"SIN\",\"KOR\",\"SRI\",\"SYR\",\"UAR\",\"TPE\",\n",
    "        \"TJK\",\"THA\",\"TUR\",\"TKM\",\"UAE\",\"UZB\",\"VIE\",\"VNM\",\"YAR\",\"YEM\",\"YMD\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c3dd943e",
   "metadata": {
    "papermill": {
     "duration": 0.108885,
     "end_time": "2023-08-25T04:37:38.616837",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.507952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# data of Asia \n",
    "df_asia = df.loc[df.NOC.isin(asia)].copy()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "479582cf",
   "metadata": {
    "papermill": {
     "duration": 0.008341,
     "end_time": "2023-08-25T04:37:38.634162",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.625821",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Asia"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "587cc9fe",
   "metadata": {
    "papermill": {
     "duration": 0.039195,
     "end_time": "2023-08-25T04:37:38.681852",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.642657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Team</th>\n",
       "      <th>NOC</th>\n",
       "      <th>Games</th>\n",
       "      <th>Year</th>\n",
       "      <th>Season</th>\n",
       "      <th>City</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Event</th>\n",
       "      <th>Medal</th>\n",
       "      <th>region</th>\n",
       "      <th>notes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>A Dijiang</td>\n",
       "      <td>M</td>\n",
       "      <td>24.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>China</td>\n",
       "      <td>CHN</td>\n",
       "      <td>1992 Summer</td>\n",
       "      <td>1992</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Barcelona</td>\n",
       "      <td>Basketball</td>\n",
       "      <td>Basketball Men's Basketball</td>\n",
       "      <td>NaN</td>\n",
       "      <td>China</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>A Lamusi</td>\n",
       "      <td>M</td>\n",
       "      <td>23.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>China</td>\n",
       "      <td>CHN</td>\n",
       "      <td>2012 Summer</td>\n",
       "      <td>2012</td>\n",
       "      <td>Summer</td>\n",
       "      <td>London</td>\n",
       "      <td>Judo</td>\n",
       "      <td>Judo Men's Extra-Lightweight</td>\n",
       "      <td>NaN</td>\n",
       "      <td>China</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>54</td>\n",
       "      <td>Mohamed Jamshid Abadi</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Iran</td>\n",
       "      <td>IRI</td>\n",
       "      <td>1948 Summer</td>\n",
       "      <td>1948</td>\n",
       "      <td>Summer</td>\n",
       "      <td>London</td>\n",
       "      <td>Boxing</td>\n",
       "      <td>Boxing Men's Heavyweight</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Iran</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>65</td>\n",
       "      <td>Patimat Abakarova</td>\n",
       "      <td>F</td>\n",
       "      <td>21.0</td>\n",
       "      <td>165.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>Azerbaijan</td>\n",
       "      <td>AZE</td>\n",
       "      <td>2016 Summer</td>\n",
       "      <td>2016</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>Taekwondo</td>\n",
       "      <td>Taekwondo Women's Flyweight</td>\n",
       "      <td>Bronze</td>\n",
       "      <td>Azerbaijan</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>78</td>\n",
       "      <td>Salim Abanoz</td>\n",
       "      <td>M</td>\n",
       "      <td>26.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>TUR</td>\n",
       "      <td>1996 Summer</td>\n",
       "      <td>1996</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Atlanta</td>\n",
       "      <td>Judo</td>\n",
       "      <td>Judo Men's Lightweight</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     ID                   Name Sex   Age  Height  Weight        Team  NOC  \\\n",
       "0     1              A Dijiang   M  24.0   180.0    80.0       China  CHN   \n",
       "1     2               A Lamusi   M  23.0   170.0    60.0       China  CHN   \n",
       "147  54  Mohamed Jamshid Abadi   M   NaN     NaN     NaN        Iran  IRI   \n",
       "161  65      Patimat Abakarova   F  21.0   165.0    49.0  Azerbaijan  AZE   \n",
       "180  78           Salim Abanoz   M  26.0     NaN     NaN      Turkey  TUR   \n",
       "\n",
       "           Games  Year  Season            City       Sport  \\\n",
       "0    1992 Summer  1992  Summer       Barcelona  Basketball   \n",
       "1    2012 Summer  2012  Summer          London        Judo   \n",
       "147  1948 Summer  1948  Summer          London      Boxing   \n",
       "161  2016 Summer  2016  Summer  Rio de Janeiro   Taekwondo   \n",
       "180  1996 Summer  1996  Summer         Atlanta        Judo   \n",
       "\n",
       "                            Event   Medal      region notes  \n",
       "0     Basketball Men's Basketball     NaN       China   NaN  \n",
       "1    Judo Men's Extra-Lightweight     NaN       China   NaN  \n",
       "147      Boxing Men's Heavyweight     NaN        Iran   NaN  \n",
       "161   Taekwondo Women's Flyweight  Bronze  Azerbaijan   NaN  \n",
       "180        Judo Men's Lightweight     NaN      Turkey   NaN  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# info of data\n",
    "df_asia.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e9fd9318",
   "metadata": {
    "papermill": {
     "duration": 0.023499,
     "end_time": "2023-08-25T04:37:38.714698",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.691199",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(34598, 17)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_asia.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "01bebf58",
   "metadata": {
    "papermill": {
     "duration": 0.024329,
     "end_time": "2023-08-25T04:37:38.748358",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.724029",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['ID', 'Name', 'Sex', 'Age', 'Height', 'Weight', 'Team', 'NOC', 'Games',\n",
       "       'Year', 'Season', 'City', 'Sport', 'Event', 'Medal', 'region', 'notes'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_asia.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ed64ba11",
   "metadata": {
    "papermill": {
     "duration": 0.057109,
     "end_time": "2023-08-25T04:37:38.815430",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.758321",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>34598.000000</td>\n",
       "      <td>33380.000000</td>\n",
       "      <td>29908.000000</td>\n",
       "      <td>29890.000000</td>\n",
       "      <td>34598.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>73669.193046</td>\n",
       "      <td>24.084242</td>\n",
       "      <td>171.021232</td>\n",
       "      <td>66.165289</td>\n",
       "      <td>1990.219203</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>39361.985077</td>\n",
       "      <td>5.129478</td>\n",
       "      <td>10.084522</td>\n",
       "      <td>13.884692</td>\n",
       "      <td>20.837150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>132.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>1900.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>46922.250000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>164.000000</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>1976.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>69972.500000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>1996.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>109703.750000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>178.000000</td>\n",
       "      <td>73.000000</td>\n",
       "      <td>2008.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>135547.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>226.000000</td>\n",
       "      <td>163.000000</td>\n",
       "      <td>2016.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  ID           Age        Height        Weight          Year\n",
       "count   34598.000000  33380.000000  29908.000000  29890.000000  34598.000000\n",
       "mean    73669.193046     24.084242    171.021232     66.165289   1990.219203\n",
       "std     39361.985077      5.129478     10.084522     13.884692     20.837150\n",
       "min         1.000000     11.000000    132.000000     25.000000   1900.000000\n",
       "25%     46922.250000     21.000000    164.000000     57.000000   1976.000000\n",
       "50%     69972.500000     23.000000    170.000000     65.000000   1996.000000\n",
       "75%    109703.750000     27.000000    178.000000     73.000000   2008.000000\n",
       "max    135547.000000     71.000000    226.000000    163.000000   2016.000000"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_asia.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9b9798d2",
   "metadata": {
    "papermill": {
     "duration": 0.026823,
     "end_time": "2023-08-25T04:37:38.854481",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.827658",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID          int64\n",
       "Name       object\n",
       "Sex        object\n",
       "Age       float64\n",
       "Height    float64\n",
       "Weight    float64\n",
       "Team       object\n",
       "NOC        object\n",
       "Games      object\n",
       "Year        int64\n",
       "Season     object\n",
       "City       object\n",
       "Sport      object\n",
       "Event      object\n",
       "Medal      object\n",
       "region     object\n",
       "notes      object\n",
       "dtype: object"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_asia.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "74013b6d",
   "metadata": {
    "papermill": {
     "duration": 0.066284,
     "end_time": "2023-08-25T04:37:38.930653",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.864369",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# clean data\n",
    "df_asia.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "255556a5",
   "metadata": {
    "papermill": {
     "duration": 0.102577,
     "end_time": "2023-08-25T04:37:39.043302",
     "exception": false,
     "start_time": "2023-08-25T04:37:38.940725",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_asia.drop_duplicates(inplace=True)\n",
    "df_asia.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1b3d5105",
   "metadata": {
    "papermill": {
     "duration": 0.082096,
     "end_time": "2023-08-25T04:37:39.135517",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.053421",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID            0\n",
       "Name          0\n",
       "Sex           0\n",
       "Age        1215\n",
       "Height     4669\n",
       "Weight     4687\n",
       "Team          0\n",
       "NOC           0\n",
       "Games         0\n",
       "Year          0\n",
       "Season        0\n",
       "City          0\n",
       "Sport         0\n",
       "Event         0\n",
       "Medal     31055\n",
       "region        0\n",
       "notes     33751\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_asia.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0efdcba8",
   "metadata": {
    "papermill": {
     "duration": 0.050173,
     "end_time": "2023-08-25T04:37:39.196418",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.146245",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Team</th>\n",
       "      <th>NOC</th>\n",
       "      <th>Games</th>\n",
       "      <th>Year</th>\n",
       "      <th>Season</th>\n",
       "      <th>City</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Event</th>\n",
       "      <th>Medal</th>\n",
       "      <th>region</th>\n",
       "      <th>notes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>A Dijiang</td>\n",
       "      <td>M</td>\n",
       "      <td>24.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>China</td>\n",
       "      <td>CHN</td>\n",
       "      <td>1992 Summer</td>\n",
       "      <td>1992</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Barcelona</td>\n",
       "      <td>Basketball</td>\n",
       "      <td>Basketball Men's Basketball</td>\n",
       "      <td>NaN</td>\n",
       "      <td>China</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>A Lamusi</td>\n",
       "      <td>M</td>\n",
       "      <td>23.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>60.0</td>\n",
       "      <td>China</td>\n",
       "      <td>CHN</td>\n",
       "      <td>2012 Summer</td>\n",
       "      <td>2012</td>\n",
       "      <td>Summer</td>\n",
       "      <td>London</td>\n",
       "      <td>Judo</td>\n",
       "      <td>Judo Men's Extra-Lightweight</td>\n",
       "      <td>NaN</td>\n",
       "      <td>China</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>54</td>\n",
       "      <td>Mohamed Jamshid Abadi</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Iran</td>\n",
       "      <td>IRI</td>\n",
       "      <td>1948 Summer</td>\n",
       "      <td>1948</td>\n",
       "      <td>Summer</td>\n",
       "      <td>London</td>\n",
       "      <td>Boxing</td>\n",
       "      <td>Boxing Men's Heavyweight</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Iran</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>65</td>\n",
       "      <td>Patimat Abakarova</td>\n",
       "      <td>F</td>\n",
       "      <td>21.0</td>\n",
       "      <td>165.0</td>\n",
       "      <td>49.0</td>\n",
       "      <td>Azerbaijan</td>\n",
       "      <td>AZE</td>\n",
       "      <td>2016 Summer</td>\n",
       "      <td>2016</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>Taekwondo</td>\n",
       "      <td>Taekwondo Women's Flyweight</td>\n",
       "      <td>Bronze</td>\n",
       "      <td>Azerbaijan</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>180</th>\n",
       "      <td>78</td>\n",
       "      <td>Salim Abanoz</td>\n",
       "      <td>M</td>\n",
       "      <td>26.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>TUR</td>\n",
       "      <td>1996 Summer</td>\n",
       "      <td>1996</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Atlanta</td>\n",
       "      <td>Judo</td>\n",
       "      <td>Judo Men's Lightweight</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Turkey</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>270981</th>\n",
       "      <td>135503</td>\n",
       "      <td>Zurab Zviadauri</td>\n",
       "      <td>M</td>\n",
       "      <td>23.0</td>\n",
       "      <td>182.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>Georgia</td>\n",
       "      <td>GEO</td>\n",
       "      <td>2004 Summer</td>\n",
       "      <td>2004</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Athina</td>\n",
       "      <td>Judo</td>\n",
       "      <td>Judo Men's Middleweight</td>\n",
       "      <td>Gold</td>\n",
       "      <td>Georgia</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271052</th>\n",
       "      <td>135547</td>\n",
       "      <td>Viktoriya Viktorovna Zyabkina</td>\n",
       "      <td>F</td>\n",
       "      <td>19.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>KAZ</td>\n",
       "      <td>2012 Summer</td>\n",
       "      <td>2012</td>\n",
       "      <td>Summer</td>\n",
       "      <td>London</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 200 metres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271053</th>\n",
       "      <td>135547</td>\n",
       "      <td>Viktoriya Viktorovna Zyabkina</td>\n",
       "      <td>F</td>\n",
       "      <td>23.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>KAZ</td>\n",
       "      <td>2016 Summer</td>\n",
       "      <td>2016</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 100 metres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271054</th>\n",
       "      <td>135547</td>\n",
       "      <td>Viktoriya Viktorovna Zyabkina</td>\n",
       "      <td>F</td>\n",
       "      <td>23.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>KAZ</td>\n",
       "      <td>2016 Summer</td>\n",
       "      <td>2016</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 200 metres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271055</th>\n",
       "      <td>135547</td>\n",
       "      <td>Viktoriya Viktorovna Zyabkina</td>\n",
       "      <td>F</td>\n",
       "      <td>23.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>KAZ</td>\n",
       "      <td>2016 Summer</td>\n",
       "      <td>2016</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 4 x 100 metres Relay</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>34577 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            ID                           Name Sex   Age  Height  Weight  \\\n",
       "0            1                      A Dijiang   M  24.0   180.0    80.0   \n",
       "1            2                       A Lamusi   M  23.0   170.0    60.0   \n",
       "147         54          Mohamed Jamshid Abadi   M   NaN     NaN     NaN   \n",
       "161         65              Patimat Abakarova   F  21.0   165.0    49.0   \n",
       "180         78                   Salim Abanoz   M  26.0     NaN     NaN   \n",
       "...        ...                            ...  ..   ...     ...     ...   \n",
       "270981  135503                Zurab Zviadauri   M  23.0   182.0    90.0   \n",
       "271052  135547  Viktoriya Viktorovna Zyabkina   F  19.0   174.0    62.0   \n",
       "271053  135547  Viktoriya Viktorovna Zyabkina   F  23.0   174.0    62.0   \n",
       "271054  135547  Viktoriya Viktorovna Zyabkina   F  23.0   174.0    62.0   \n",
       "271055  135547  Viktoriya Viktorovna Zyabkina   F  23.0   174.0    62.0   \n",
       "\n",
       "              Team  NOC        Games  Year  Season            City  \\\n",
       "0            China  CHN  1992 Summer  1992  Summer       Barcelona   \n",
       "1            China  CHN  2012 Summer  2012  Summer          London   \n",
       "147           Iran  IRI  1948 Summer  1948  Summer          London   \n",
       "161     Azerbaijan  AZE  2016 Summer  2016  Summer  Rio de Janeiro   \n",
       "180         Turkey  TUR  1996 Summer  1996  Summer         Atlanta   \n",
       "...            ...  ...          ...   ...     ...             ...   \n",
       "270981     Georgia  GEO  2004 Summer  2004  Summer          Athina   \n",
       "271052  Kazakhstan  KAZ  2012 Summer  2012  Summer          London   \n",
       "271053  Kazakhstan  KAZ  2016 Summer  2016  Summer  Rio de Janeiro   \n",
       "271054  Kazakhstan  KAZ  2016 Summer  2016  Summer  Rio de Janeiro   \n",
       "271055  Kazakhstan  KAZ  2016 Summer  2016  Summer  Rio de Janeiro   \n",
       "\n",
       "             Sport                                   Event   Medal  \\\n",
       "0       Basketball             Basketball Men's Basketball     NaN   \n",
       "1             Judo            Judo Men's Extra-Lightweight     NaN   \n",
       "147         Boxing                Boxing Men's Heavyweight     NaN   \n",
       "161      Taekwondo             Taekwondo Women's Flyweight  Bronze   \n",
       "180           Judo                  Judo Men's Lightweight     NaN   \n",
       "...            ...                                     ...     ...   \n",
       "270981        Judo                 Judo Men's Middleweight    Gold   \n",
       "271052   Athletics            Athletics Women's 200 metres     NaN   \n",
       "271053   Athletics            Athletics Women's 100 metres     NaN   \n",
       "271054   Athletics            Athletics Women's 200 metres     NaN   \n",
       "271055   Athletics  Athletics Women's 4 x 100 metres Relay     NaN   \n",
       "\n",
       "            region notes  \n",
       "0            China   NaN  \n",
       "1            China   NaN  \n",
       "147           Iran   NaN  \n",
       "161     Azerbaijan   NaN  \n",
       "180         Turkey   NaN  \n",
       "...            ...   ...  \n",
       "270981     Georgia   NaN  \n",
       "271052  Kazakhstan   NaN  \n",
       "271053  Kazakhstan   NaN  \n",
       "271054  Kazakhstan   NaN  \n",
       "271055  Kazakhstan   NaN  \n",
       "\n",
       "[34577 rows x 17 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_asia"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "daf9d039",
   "metadata": {
    "papermill": {
     "duration": 0.029519,
     "end_time": "2023-08-25T04:37:39.241035",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.211516",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1172"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# age is important in sport, 1215 athlete has no age, 31055 didn't get medal\n",
    "# rows where age and medal is not null\n",
    "sum(df_asia[df_asia['Age'].isna()] ['Medal'].isna())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b4ee8248",
   "metadata": {
    "papermill": {
     "duration": 0.028897,
     "end_time": "2023-08-25T04:37:39.280618",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.251721",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_asia.Sex.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "014114f6",
   "metadata": {
    "papermill": {
     "duration": 0.026767,
     "end_time": "2023-08-25T04:37:39.317945",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.291178",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "23620"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum(df_asia.Sex=='M')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f0db47b0",
   "metadata": {
    "papermill": {
     "duration": 0.217683,
     "end_time": "2023-08-25T04:37:39.549449",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.331766",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-1.1112206810747738,\n",
       " 1.1988169665563972,\n",
       " -1.1141938121715196,\n",
       " 1.1576724985297457)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Sex=['Male','Female']\n",
    "#cnt=[11966-2644,2644]\n",
    "cnt = [sum(df_asia.Sex=='M'), sum(df_asia.Sex=='F')]\n",
    "explode=(0,0.1)\n",
    "plt.pie(x=cnt, labels=Sex, explode=explode,autopct='%1.1f%%', startangle=90, shadow=True, colors=['#5A7FDD','#FD78F0'])\n",
    "plt.title(\"Gender Distribution\")\n",
    "plt.axis('equal')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "a71f7249",
   "metadata": {
    "papermill": {
     "duration": 0.034498,
     "end_time": "2023-08-25T04:37:39.599240",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.564742",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# medals data \n",
    "df_medals = df_asia[~(df_asia.Medal.isna())].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b368adc0",
   "metadata": {
    "papermill": {
     "duration": 0.02708,
     "end_time": "2023-08-25T04:37:39.645118",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.618038",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3522, 17)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_medals.shape\n",
    "# 3522 athlete got medals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "327af538",
   "metadata": {
    "papermill": {
     "duration": 0.037235,
     "end_time": "2023-08-25T04:37:39.695092",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.657857",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3522.000000</td>\n",
       "      <td>3479.000000</td>\n",
       "      <td>3228.000000</td>\n",
       "      <td>3217.000000</td>\n",
       "      <td>3522.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>78357.310903</td>\n",
       "      <td>24.130785</td>\n",
       "      <td>170.699814</td>\n",
       "      <td>66.934204</td>\n",
       "      <td>1992.917660</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>37931.594728</td>\n",
       "      <td>4.129707</td>\n",
       "      <td>9.693859</td>\n",
       "      <td>14.503670</td>\n",
       "      <td>21.036869</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>65.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>136.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>1900.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>52336.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>164.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>1984.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>71928.000000</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>65.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>113258.000000</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>177.000000</td>\n",
       "      <td>74.000000</td>\n",
       "      <td>2008.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>135503.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>205.000000</td>\n",
       "      <td>160.000000</td>\n",
       "      <td>2016.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  ID          Age       Height       Weight         Year\n",
       "count    3522.000000  3479.000000  3228.000000  3217.000000  3522.000000\n",
       "mean    78357.310903    24.130785   170.699814    66.934204  1992.917660\n",
       "std     37931.594728     4.129707     9.693859    14.503670    21.036869\n",
       "min        65.000000    13.000000   136.000000    28.000000  1900.000000\n",
       "25%     52336.000000    21.000000   164.000000    58.000000  1984.000000\n",
       "50%     71928.000000    24.000000   170.000000    65.000000  2000.000000\n",
       "75%    113258.000000    27.000000   177.000000    74.000000  2008.000000\n",
       "max    135503.000000    48.000000   205.000000   160.000000  2016.000000"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_medals.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1f343ddf",
   "metadata": {
    "papermill": {
     "duration": 0.151651,
     "end_time": "2023-08-25T04:37:39.859044",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.707393",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-1.1047708721970209,\n",
       " 1.1023483235248026,\n",
       " -1.1019635159457213,\n",
       " 1.100093534924937)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# medal distribution\n",
    "medal=['Gold','Bronze','Silver']\n",
    "cnt=[sum(df_medals.Medal == 'Gold'), sum(df_medals.Medal == 'Bronze'), sum(df_medals.Medal == 'Silver')]\n",
    "plt.pie(x = cnt, labels = medal, autopct='%1.1f%%', startangle=90, shadow=True, colors=['#D5D90B','#CA7007','0.7'])\n",
    "plt.title(\"Medals Distribution\")\n",
    "plt.axis('equal')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "26354735",
   "metadata": {
    "papermill": {
     "duration": 0.029004,
     "end_time": "2023-08-25T04:37:39.905144",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.876140",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "China                   993\n",
       "Japan                   913\n",
       "South Korea             638\n",
       "India                   197\n",
       "Pakistan                121\n",
       "Turkey                   95\n",
       "Kazakhstan               77\n",
       "Iran                     68\n",
       "North Korea              67\n",
       "Taiwan                   49\n",
       "Azerbaijan               44\n",
       "Indonesia                41\n",
       "Uzbekistan               34\n",
       "Georgia                  32\n",
       "Thailand                 30\n",
       "Mongolia                 26\n",
       "Armenia                  16\n",
       "Malaysia                 16\n",
       "Philippines              10\n",
       "Israel                    9\n",
       "Saudi Arabia              6\n",
       "Qatar                     5\n",
       "Syria                     5\n",
       "Vietnam                   4\n",
       "Tajikistan                4\n",
       "Lebanon                   4\n",
       "Bahrain                   3\n",
       "Kyrgyzstan                3\n",
       "Sri Lanka                 2\n",
       "Kuwait                    2\n",
       "Afghanistan               2\n",
       "United Arab Emirates      2\n",
       "Nepal                     1\n",
       "Jordan                    1\n",
       "Mauritius                 1\n",
       "Iraq                      1\n",
       "Name: region, dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_medals['region'].value_counts().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4e81b494",
   "metadata": {
    "papermill": {
     "duration": 0.029083,
     "end_time": "2023-08-25T04:37:39.952154",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.923071",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "China          993\n",
       "Japan          913\n",
       "South Korea    638\n",
       "India          197\n",
       "Pakistan       121\n",
       "Turkey          95\n",
       "Kazakhstan      77\n",
       "Iran            68\n",
       "North Korea     67\n",
       "Taiwan          49\n",
       "Name: region, dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_medals = df_medals['region'].value_counts(ascending=False).head(10)\n",
    "top_medals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d3f9d44b",
   "metadata": {
    "papermill": {
     "duration": 0.32012,
     "end_time": "2023-08-25T04:37:40.285424",
     "exception": false,
     "start_time": "2023-08-25T04:37:39.965304",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Country')"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# top 10 countries\n",
    "top_medals = df_medals['region'].value_counts(ascending=False).head(10)\n",
    "ax = top_medals.plot(kind='bar', title='Top 10 Countries with Medals')\n",
    "ax.set_ylabel('Medal Count')\n",
    "ax.set_xlabel('Country')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "5d7a5de4",
   "metadata": {
    "papermill": {
     "duration": 0.502539,
     "end_time": "2023-08-25T04:37:40.802420",
     "exception": false,
     "start_time": "2023-08-25T04:37:40.299881",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Medals per Year')"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# medals per year\n",
    "plt.figure(figsize=(20, 10))\n",
    "sns.countplot(x='Year', data=df_medals)\n",
    "plt.style.use('seaborn')\n",
    "plt.title('Medals per Year')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "85a5080d",
   "metadata": {
    "papermill": {
     "duration": 0.537737,
     "end_time": "2023-08-25T04:37:41.361342",
     "exception": false,
     "start_time": "2023-08-25T04:37:40.823605",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Medals per Age')"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABJIAAANsCAYAAAAA0oL4AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAABBZElEQVR4nO3dfZSVZb34/88wExaSBOiAizicMMSOJuovU1QgB3kcYCYC+9pRc7QsUoksn7CoLPOhVorkKYhj0UktJR3K0STGBL6ZmT04dpaklCScZI8BCiiPw/37o8N8RWbjhbrvGeT1Wqu1hnv2PZ/rJrnW7Pfce09ZlmVZAAAAAMCr6NTeCwAAAABg3yAkAQAAAJBESAIAAAAgiZAEAAAAQBIhCQAAAIAkQhIAAAAASYQkAID/NXDgwPjb3/72qo9btWpVDBw4MLZv357DqgAAOg4hCQDY51RVVcVRRx0Va9eu3eV4TU1NDBw4MFatWtVOK+sYZs2aFQMHDoympqb2XgoA8CYjJAEA+6Q+ffpEQ0ND65///Oc/x+bNm9txRfkqdjdUlmWxYMGCeMc73hF33313zqsCAN7shCQAYJ9UU1MT9fX1rX+ur6+P2traXR6zdevWuO666+IDH/hAnHTSSTFjxoxdYtPcuXPjlFNOiVNOOSXmz5+/y7kPPvhg1NbWxnHHHRfDhg2LWbNmFV3LXXfdFcOHD49jjz02qqqq4qc//Wmbj5s1a1ZMnTo1pk2bFscee2x88IMfjGXLlrV+vlAoxEUXXRQnnnhiVFVVxQ9+8IPdzv3c5z4Xxx13XNFI9Oijj0Zzc3NMnz497r333ti6dWvr51paWuLaa6+NE044IaqqquKHP/zhLi/R27BhQ0yfPj1OOeWUGDJkSNxwww3R0tJS9LoBgP2PkAQA7JOOOeaY2LhxY/zlL3+JlpaWuPfee2PChAm7PObrX/96PP3001FfXx8LFy6M5ubmuPnmmyMiYsmSJXHLLbfELbfcEgsXLoxf//rXu5z7tre9La677rp49NFHY/bs2XH77bfHokWLdlvHSy+9FF/96lfju9/9bvzhD3+IH/3oR/Ge97yn6LobGxtj9OjR8cgjj8S4cePiU5/6VGzbti127NgRU6ZMiYEDB8aSJUti3rx5MW/evFi6dOlu5z766KMxfvz4Nr/+3XffHaeeemqMHTs2Iv4ZxHa64447YsmSJbFgwYK4++67d7ueyy67LCoqKmLhwoVRX18fv/rVr+LOO+8sei0AwP5HSAIA9lk770r61a9+Ff37949evXq1fi7Lsrjzzjtj+vTp8Y53vCO6du0an/jEJ1pfDnfffffFxIkT4/DDD48uXbrEhRdeuMvXPuGEE2LgwIHRqVOnOOKII6K6ujoeeeSRNtfRqVOneOqpp2Lz5s1RWVkZAwYMKLrmI488MkaPHh1vectboq6uLrZu3RqPPfZYPP7447F27dq48MILo3PnztG3b984/fTT4957720995hjjonTTjstOnXqFG9961t3+9qbNm2Kn//85zF+/Ph4y1veEqNGjdrlzqX77rsvzj777Ojdu3d069Ytzj///NbP/eMf/4glS5bE9OnTo0uXLtGzZ88455xzdnn5IABARXsvAADgtaqpqYkzzzwzVq1aFTU1Nbt8bu3atbFp06aYOHFi67Esy2LHjh0REdHc3BxHHXVU6+f69Omzy/mPPfZYfOMb34innnoqtm3bFlu3bo3Ro0fvtoYuXbrEDTfcELfccktceeWVcdxxx8Vll10Whx12WJtr7t27d+vHnTp1il69ekVzc3Prmt73vve1fr6lpWWXP7/83Lb84he/iIqKihg6dGhERIwfPz7q6upi7dq10aNHj2hubo5DDz20za/397//PbZv3x6nnHJK67EdO3bs8ngAACEJANhn9enTJ975znfG4sWL4+qrr97lc927d4+3vvWt0dDQsMudSjtVVlbGs88+2/rnv//977t8/rOf/WyceeaZMXfu3DjggAPi6quvjnXr1rW5jiFDhsSQIUNi8+bNceONN8YXvvCFuO2229p87OrVq1s/3rFjRxQKhaisrIzy8vJ45zvfGQsXLix6vWVlZUU/F/HP94l66aWX4tRTT42If4azbdu2xT333BNnn312HHLIIbvMf/nHvXv3js6dO8fDDz8cFRW+RQQA2ualbQDAPu3qq6+OefPmRZcuXXY53qlTp5g8eXJ87WtfizVr1kTEP9/Meud7Do0ePTruvvvuWL58eWzatCm+9a1v7XL+iy++GN26dYsDDjggmpqa4p577mlz/j/+8Y9obGyMl156KTp37hxdunSJ8vLyouv97//+71i4cGFs37495s2bF507d45BgwbF0UcfHV27do05c+bE5s2bo6Wl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VLhrCfJwyCFvN9988/fD+fvztXeE+QAAHU2uIemMM86IT33qU1FWVhYzZ86Ma6+9Nq655prIsmy3x5aVlb3q11u37qVSLBNow3PPbTDffPP3w/n787V3hPkAAO1hTz9MK9lL29py8MEHR3l5eXTq1CkmT54cjz/+eERE9O7dO1avXt36uEKhEJWVlXkuDQAAAIBXkWtIam5ubv140aJFMWDAgIiIqKqqioaGhti6dWusXLkyVqxYEUcffXSeSwMAAADgVZTspW0XX3xxPPLII7Fu3boYOnRoXHTRRfHII4/EsmXLIiKiT58+cdVVV0VExIABA2LMmDExduzYKC8vjxkzZviNbQAAAAAdTMlC0je/+c3djk2ePLno46dMmRJTpkwp1XIAAAAAeJ1yfWkbAAAAAPsuIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACSCEkAAAAAJBGSAAAAAEgiJAEAAACQREgCAAAAIImQBAAAAEASIQkAAACAJEISAAAAAEmEJAAAAACS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\n",
      "text/plain": [
       "<Figure size 1440x1080 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# medals per age\n",
    "plt.figure(figsize=(20, 15))\n",
    "sns.countplot(x='Age', data=df_medals)\n",
    "plt.style.use('seaborn')\n",
    "plt.title('Medals per Age')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "c2fc6e9d",
   "metadata": {
    "papermill": {
     "duration": 0.173072,
     "end_time": "2023-08-25T04:37:41.547751",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.374679",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-1.1186467807897833,\n",
       " 1.218002934727327,\n",
       " -1.1145893608409556,\n",
       " 1.1335829654049197)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAcwAAAFJCAYAAAAWph3tAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAABCpUlEQVR4nO3deXhUZZ4+/Puc2it7gCyEnZAAYQ2yKfviBu7dSk9r293Toz32cjnt9PT0zLS+Mz91pqedsYW2dRxtx71tUUARFFxAZd9DgJAQQsi+VrbazznP+0cwoQyQAlJ1ark/18VFqupU5VshnLue5TyPJIQQICIiokuS9S6AiIgoGjAwiYiIgsDAJCIiCgIDk4iIKAgMTCIioiAwMImIiILAwCT6hvz8fFRWVvZ7XHV1NfLz86EoShiqikz33Xcf3nnnHb3LIAoLBiZFrSVLlmDSpElobW0NuP+2225Dfn4+qqurdaqMiGIRA5OiWk5ODj788MOe2ydPnoTH49GxovCK1tZttNZN8Y2BSVHttttuw/r163tur1+/HrfffnvAMT6fD7/97W+xaNEiXHvttXj00UcDQvXFF1/EvHnzMG/ePKxduzbgudu2bcPtt9+OwsJCLFy4EGvWrLloLe+99x6WLl2K6dOnY8mSJXj//fcveNyaNWvw85//HA8//DCmT5+OO+64AyUlJT2PNzQ04Gc/+xnmzJmDJUuW4NVXX+3z3L//+79HYWEh1q1b1+f1HQ4HfvzjH6OwsBB33XUXnn76aXznO9/peby8vBw/+MEPMGvWLNxwww3YtGlTz2P/+I//iH/913/FAw88gOnTp+Pb3/42zp492/P4jh07cOONN2LGjBn4t3/7N3xzobC1a9fipptuwsyZM/HXf/3XqKmp6XksPz8fb7zxBq6//npcf/31F/05EkUsQRSlFi9eLHbs2CGuv/56cerUKaEoiliwYIGorq4WeXl5oqqqSgghxOOPPy4efPBB4XA4RGdnp3jwwQfFU089JYQQYvv27WLu3Lni5MmTwul0il/84hciLy9PnDlzRgghxO7du0VJSYlQVVWcOHFCzJ07V2zdulUIIURVVZXIy8sTfr9fOJ1OMX36dFFeXi6EEKKhoUGUlpZesO7Vq1eLiRMnis2bNwufzydefPFFsXjxYuHz+YSqquKOO+4Qa9asEV6vV5w9e1YsWbJEfPHFFwHP3bp1q1BVVbjd7j6v//DDD4uHH35YuFwuUVZWJhYsWCBWrVolhBDC6XSKBQsWiLVr1wq/3y+Ki4vFrFmzemr91a9+JWbOnCmOHDki/H6/+MUvfiEefvhhIYQQLS0tYvr06T11v/zyy2LChAniL3/5ixBCiK1bt4ply5aJU6dOCb/fL5599llxzz339NSVl5cnvv/97wuHw3HBuokiHVuYFPW+bmXu2LEDY8aMQWZmZs9jQgi88847+Kd/+iekpqYiMTERDz74YE837ubNm3HnnXciLy8PdrsdP/3pTwNee/bs2cjPz4csyxg/fjxWrFiBvXv3XrAOWZZRVlYGj8eDjIwMjBs37qI1FxQU4MYbb4TJZMIPfvAD+Hw+HDlyBEePHkVrayt++tOfwmw2Y/jw4bj77rsDWoHTpk3DsmXLIMsyrFZrwOuqqootW7bgZz/7GWw2G3JzcwNa3Nu2bUNOTg7uuusuGI1GFBQU4IYbbsDHH3/cc8zy5csxZcoUGI1G3HrrrThx4gQA4IsvvkBubm5P3ffffz8GDx7c87w///nPeOCBBzB27FgYjUb8+Mc/xokTJwJamQ888ABSU1P71E0UDYx6F0B0tW677Tbce++9qK6uxm233RbwWGtrK9xuN+68886e+4QQ0DQNANDY2IhJkyb1PJaTkxPw/CNHjuCpp55CWVkZ/H4/fD4fbrzxxj412O12PP300/jTn/6Ef/7nf0ZhYSF+9atfYezYsResOSsrq+drWZaRmZmJxsbGnpquueaansdVVQ24ff5zv6m1tRWKoiA7O7vnvvO/rqmpQVFRUZ/Xv/XWW3tunx+CVqsVLperp67zv7ckSQGvXVtbiyeffBK//e1ve+4TQqChoaHn53r+8UTRhoFJUS8nJwfDhg3D9u3b8cQTTwQ8lpaWBqvVig8//DCg5fm1jIwM1NXV9dyura0NePyRRx7BvffeixdffBEWiwVPPPEEHA7HBeuYP38+5s+fD4/Hg9///vf4zW9+gzfffPOCx9bX1/d8rWkaGhoakJGRAYPBgGHDhmHLli0Xfb+SJF30sfT0dBiNRtTX12P06NEAEPD+srOzMXPmTLz88ssXfY2LGTJkSEDdQog+r/3jH/84IHwvp3aiSMcuWYoJTzzxBF555RXY7faA+2VZxre//W08+eSTaGlpAdA9qebLL78EANx4441Yt24dTp06BbfbjT/84Q8Bz3c6nUhJSYHFYkFRURE2btx4we/f3NyMTz/9FC6XC2azGXa7HQaD4aL1Hjt2DFu2bIGiKHjllVdgNpsxdepUTJkyBYmJiXjhhRfg8XigqipKS0tRVFQU1M/BYDBg+fLl+MMf/gC3243y8nJs2LCh5/FFixbhzJkzWL9+Pfx+P/x+P4qKilBeXt7vay9cuBBlZWU9db/66qtobm7ueXzVqlV44YUXUFZWBgDo7OzE5s2bg6qbKBowMCkmjBgxApMnT77gY7/85S8xcuRI3H333SgsLMT3v/99VFRUAOgOgfvvvx/3338/li9fjjlz5gQ897HHHsPq1asxffp0PPvss7jpppsu+D00TcPLL7+M+fPnY9asWdi3bx8ee+yxi9a7dOlSbNq0CTNnzsSGDRuwZs0amEwmGAwGPPfccygpKcHSpUsxZ84c/Mu//Au6urqC/lk8+uij6OzsxHXXXYd/+Id/wIoVK2A2mwEAiYmJeOmll7Bp0ybMnz8f8+bNw1NPPQWfz9fv66anp+OZZ57Bf/3Xf2H27NmorKxEYWFhz+PLly/Hj370I/ziF79AYWEhVq5ciS+++CLouokinSQEN5AmCqc1a9agsrISTz31VFi+3+9+9zs0NzcHjC0S0eVjC5MoxpSXl6OkpARCCBQVFWHt2rVYvny53mURRT1O+iGKMU6nE4888ggaGxsxaNAg/PCHP8TSpUv1Loso6rFLloiIKAjskiUiIgoCA5OIiCgIDEwiIqIgMDCJiIiCwMAkIiIKAgOTiIgoCAxMIiKiIDAwiYiIgsDAJCIiCgIDk4iIKAgMTCIioiAwMImIiILAwCQiIgoCA5OIiCgIDEwiIqIgcANpoigiinwQZ1RAQvfHXRmAQYJklYAECbCf/7cMySbpXDFR7GBgEkURUaECu31977/Y8QYAtvNCNFWGNEQGMgzAEBkYJEMyMFSJgsHAJIpwqqrC7/NDlmXIqnZ54ygqgC7R/efcHQHhagBEutwdnhmG7jAdIgOZBkhmBinR+SQhxMU+nBJRBCjadRiHdhyCJAEzu6Yh3zMm9N9UBpBtAEYZII02dv+dwCkPFN/YwiQaYEIIuL0CLo8Gl1eD26PB6VHh9gr4FQ1CAJoAkuwyZk1MDOo1TWYTAECWw9Tq0wDUqECNCrGjuwtYZMjAKCOkUQZgtBFSKgOU4gsDk+gy+BWBlnYFLe0Kms/9aWlX0NzW/Xe7U4HHKy46pni+MUMtQQdmRGjUgEYfxN7umyJVAsYYIRWYgHFGSCZ24VJsY2ASXYCmCTQ6FJxt8OJsgw9V5/40OpSgwjAutAngoB/ioB8wAyLfBGmSEcg3QbIwPCn2MDCJADQ5/Cip9KC0yoPKeh+qG33w+hmNQfMBOOqHOOoHjG6IcedanhNNvLSFYgYDk+JSTZMPJZUelFR6cLLSjZYOVe+SYocC4IQCcUIBDG6IMUZIU03AFBO7bSmqMTApLjjdKg6XuXGo1Iljp93ocGl6lxQfVABlCkSZAnzogSg0QZpjhjTYoHdlRJeNgUkxq7HVjwMnnThw0oXSsx6ozEh9uQWwwwex0wcx1ghpjhmYYIQUrpm/RFeJgUkxpbrRh51Hu7C/xImaJr/e5dCFCACnFIhTCpAsATPNwCwzpGRepkKRjYFJUa/TqWJncRe+PNyJirq+y8ZRBOsQEJ96gc+9EBONkBZZIeWwu5YiEwOTopKiCBwqc+HLw504XOZid2u00wAUKxDFXRATjJCWWSENZXBSZGFgUlRpblOwZW87th/qRJebKRmTTigQJV3dLc5lVkhZDE6KDAxMigonz3rw0e527D/hhMbLI2OfAHBMgTjeBTHJBGmpBVImg5P0xcCkiKWoAnuOOfHR7nacrvXqXQ7pQaB7QYRiP8Tkc8GZweAkfTAwKeJ4fBo+3deBzbvb4ejkggKE7uAs6l5JSMw0Q7rBAsnOWbUUXgxMihgen4atezuwaWcbFxagCxMA9vogjvmBG63ADBMkiddxUngwMEl3Pr+GT/Z14IOvGJQUJKeAeNcN7PcBt9s4MYjCgoFJulFVge2HO7FuuwOtXMuVrkSlCrGmC2KuGdJyK3dJoZBiYJIuistdeGVzC2qbuRoPXSUN3UvuHfUDK6yQppj1rohiFAOTwqrJ4cfrH7dgf4lL71Io1nQIiLfcEPv9kO6wQUrjpCAaWAxMCgufX8MHX7Xhg6/a4GfvK4VSmQLxTCdwqw1SIVubNHAYmBRye4934fWPWrjnJIWPFxDvuCFKFEi3W3kJCg0IBiaFTFungpc+aMLBUrfepVC8OuqHqFSAu+2QxvJ0R1eHv0EUEjuKOvHyxia4uXkI6a1DQLzkhFhs6V4piPtv0hViYNKAau9S8cKGehwu41J2FEEEgM+8EBUKsMrOvTfpijAwacDsKu7CS+83wO3jJ3iKUBUqxOou4G4bpDyT3tVQlGFg0lVzeTT8z/p67C/xAGBYUoRzCohXXMDNVkjXWfSuhqIIA5OuSmW9F797vRqOLgYlRRENEBs9EM0apFusHNekoDAw6Yp9tKsFb2xxQBMcD6IotdsH0aoB37FDsjI06dIYmHTZvD4Na94+i0PlGgCGJUW5UgXi+S7g/gSuDkSXxN8OuizVjV488kz5ubAkihENGsQfuyDOKnpXQhGMgUlB23OsHf/0fBUcTm6lRDGoS0D8rxOiiBcP04WxS5aC8vbH1Xh/lxf8jEUxTQHEn92AQ0BayBm0FIiBSZekaQJPvVaKIxUm8JIRigsCEB95AE1AWmzVuxqKIAxMuii3V8Vjz59EjYMnDYo/YosX0ABpKX//qRsDky6oscWDx/73NDo8PFlQ/BKfdC/xyNAkgIFJF3Cqsg1PvloPr8qTBJH4xAsIQFrG/w/xjoFJAQ4er8fqtW3wa9x4l+hr4lMvBACZoRnXGJjUY9ueCrz8kQ+KYFgS9fGpF5oA5OUMzXjFwCQAwJYvy/D6ZxpUwR0ciC7qMy80MDTjFS+qI2z8rASvfSoYlkTB+MwLsYv7vcYjBmacW7flBN7+wgCNnQ1EQRMbPRAlfr3LoDBjYMaxDZ8U472dBmjgUndEl0UDxFsuiFpV70oojBiYceqDrYfx7g4jW5ZEV8oHiFecEO3ciCBeMDDj0MefH8G7O81QORuW6Op0iO7Q9Aq9K6EwYGDGmR17T+DtL2X4BWf5EQ2IOq27e1ZjaMY6BmYcOVJ8Gv/3sRdeLUHvUohiy0kF4gOP3lVQiDEw48Sp8io8t8EBl5qsdylEsWm3D2IHLzeJZQzMOFBT14g/rq1Epz9N71KIYprY7IGoUvQug0KEgRnjWlra8Nxbh9HgHqp3KUSxTz13uYmH45mxiIEZwzxeL156ewfOdIzRuxSi+OEQEOvceldBIcDAjFFCCLz2zuc41jQWgv/MROFV5IfY59O7ChpgPJPGqE1bdmBPRTZ3HiHSifjADdHIlYBiCQMzBh08fAKb98twq0l6l0IUv/znxjP9HM+MFQzMGFNVXYd3tlbC4c/SuxQiqtcgPuT1mbGCgRlDOjq68Nb63ah2jtW7FCL62h4fRDF3NokFDMwYoWka3tnwGU46crn7CFGEEevcEE4u0h7tGJgx4vPte3GkKhUelcveEUUcl4DYzK7ZaMfAjAGnTp/Ftv0NaPEN07sUIrqYg36ICq4CFM0YmFHO5fbg/Y9246wrX+9SiOhSBCDWuyFUzpqNVgzMKCaEwAebPkd52wheb0kUDRo14Esu0B6tGJhRbP/BYzha7kWbL0PvUogoSOIzL0QrJwBFIwZmlGppacO2HYdQ7cnTuxQiuhx+QGzgWrPRiIEZhYQQ2Lz1S9S4RsGvWfUuh4guV6kCcZTXZkYbBmYUOnjkBMqqPGjycMsuomglNrohvJwAFE0YmFHG6XRh+46DqPaMByDpXQ4RXakOAfEFJwBFEwZmlPlo61eo68riAgVEsWCHlysARREGZhQpKa1AyekG1HtG6F0KEQ0EL9jKjCIMzCjh9yv4dPseNHrHQBNGvcshooGyywfRyVZmNGBgRonPv9yL1k4JzV5u20UUU/yA2MZWZjRgYEaB9o5OFBWXotY9BpzoQxSD9vog2tnKjHQMzCjw6bY96PSnosM/SO9SiCgUlO4VgCiyMTAjXHVNA8pOVaLGNUbvUogolA74uGRehGNgRrjPv9iLDi0bbjVR71KIKJRUQHzCPTMjGQMzgh0vKUdNbSPq3cP1LoWIwuGIH6KNrcxIxcCMUJqm4audB9ElMrlIAVG80ACx26d3FXQRDMwIdfDwCTg6Otm6JIo3+30QCteYjUQMzAgkhMDBw8fhVAfDrSbpXQ4RhZNTAEXcySQSMTAj0NHiUrYuieKY2MVu2UjEwIwwQgjsO3QMbi0dTiVF73KISA/VKkSVoncV9A0MzAhz4uRpNDc70OAepncpRKSjgWhlTpgwAbfddlvPn+rq6gGo7MKWLFmC1tbWkL1+JOAq3hFm34GjUOREdPjT9C6FiPR01A+xQoOUcOXtGqvVig0bNgxgUfGNgRlBTpWfRUNjK5q9ueCasURxTgGwzwcssg7oyxYXF+M//uM/4HK5kJaWhn//939HRkYG7rvvPkyYMAHHjh1Da2srfvvb3+KFF15AaWkpbrrpJvzd3/0dAOChhx5CfX09vF4vvve97+Gee+7p8z02bNiA1157DX6/H1OnTsVjjz0Gg8EwoO9DD+ySjSD7Dx2DZDCixZupdylEFAHEHh+EduWXmHg8np7u2J/85Cfw+/14/PHHsXr1arz33nu466678PTTT/ccbzKZ8MYbb2DVqlV46KGH8Oijj2Ljxo1Yt24dHA4HAODJJ5/Ee++9h3fffRevvfZaz/1fKy8vx+bNm/HWW29hw4YNkGUZH3zwwRW/h0jCFmaEcLR1oLKqFu3qUKjCpHc5RBQJ2gRwRgXGXNmp+ptdsqWlpSgtLcUPfvADAN0LpAwZMqTn8SVLlgAA8vLyMG7cOGRkZAAAhg8fjvr6eqSlpeG1117D1q1bAQB1dXWorKxEWlrvENKuXbtQXFyMb33rWwC6Q3vQoNjYOIKBGSH27j8Kg8GAZme23qUQUQQRR/yQrjAw+7yWEBg3bhzefvvtCz5uNpsBALIs93z99W1FUbBnzx7s3LkTb7/9Nmw2G+677z54vYG7rAghcMcdd+CRRx4ZkJojCbtkI4CqqjhZdgZuNRFOJVnvcogokhT7IdSBWfln9OjRaG1txaFDhwAAfr8fZWVlQT+/s7MTKSkpsNlsKC8vx+HDh/scM3fuXHz88cdoaWkBALS1taGmpmZA6tcbW5gR4EjxSbi9XjR7RuldChFFGpcATilA/tUP1ZjNZqxevRqPP/44Ojs7oaoq7r//fowbNy6o5y9YsAB//vOfccstt2D06NGYNm1an2Nyc3Px8MMP44c//CE0TYPJZMKjjz6KnJycq65fb5IQgosW6uzVt95HQ1Mbjjpmc/wyjowZasH/e6D/k0jRrsMo3lcMAJjRPgnjXKNDXRpFmukmyHfb9a4i7rFLVmf1Dc2oq29Chz+NYUlEF1aiDFi3LF05BqbODh4+DqPRCId3SP8HE1F8cgugQtW7irjHwNSREAIVlTXQhIx2X7re5RBRBBPHuIOJ3hiYOio/XYWuLhfafenQOP+KiC7luB+ccqIvBqaOjp88DaPJCIeP3bFE1I8OAVSzW1ZPDEydaJqGM5U1UIUB7T4utE5EQSjnll96YmDqpPTUGbg9XnT40iAQ/YsSE1HoCU780RUDUycnTlbAaDRwGy8iCl6lclWLsdPVYWDqQFVVVFbVAQADk4iC5wVQw1amXhiYOjhdUQ2v1we3Yodfs+hdDhFFkzMMTL0wMHVQfqaK3bFEdEVEBSf+6IWBqYOa2kYA7I4loitQwXFMvfBq+TDr6nKhudkB2WhGl59beRH1x6t6cd8XD8Kn+aBoKm7IWYqfTXwAJW2l+P8O/wdcihs59mz8bua/IdGU2Of5/1f2Jtae2QBJkpCXnIsnZ/wGFoMFTxWvwZf1uzA+dRx+e82/AgA2nN2Edl8Hvpe7KtxvM3geAPUaMJSz68ONLcwwO1ZyCgajAV3+ZF5OQhQEs2zGy/P/iPVL38S6pW/gq4ZdONx6FL85+AR+UfBTvL/sLSwbuggvlb7e57kN7ka8Xv421i55BR8s+zM0oWJT9VZ0+rtwuKUIG5a9CU1oKG0/BY/qwfrKjfjOmG/p8C4vE7tldcHADLPqmgZIkoQuJUXvUoiigiRJSDB2b22laAr8mgIJEiq6zmLm4OkAgGszZmNr7ecXfL4qVHhULxRNgVv1IMM6GDIk+DUFQgh4VC+MshEvlb6Oe8feA5Mc+R1vHMfUBwMzjIQQPeOXTiVJ52qIoocqVNzx6Xcx78MbcG3mLExNn4RxyWPwWd0XAICPaz5Bnbuhz/MybRn4wbh7sXTzrViw6WYkmRJxXeYcJJgSsDxnMe787F4Msw9FojERxY7jWDp0Ybjf2pWp5UxZPTAww6i2rhFOpwtCAC4GJlHQDJIB65a+gc9v2oijrcdR2l6OJ2b8Bm+eXou7PvsenIrrgi3Ddl8HPqvbjq03rsf2mzfBrbjx/tnNAIAf5X0P65a+gV9NeRirjz+Pn018EO9UrMff7fk1nit5Kdxv8fK0CQgfJ/6EGwMzjCoqa2Aym+DVbFBF5Hf7EEWaZHMSZg0pxFcNuzAmaRRemrcG7y55FTcPux4jEob1OX5X417k2Ici3ZIGk2zEsqGLcailKOCY420nAQCjEkdgw9lNeHr2v6Os4zTOdJ0Ny3u6IgJAk6Z3FXGHgRlGTU0OSJIEp5+tS6JgtXod6PB1AgA8qge7GvdidNJItHhaAQCa0PD8yT/hntF39nlutj0LR1qL4VY8EEJgd9M+jE0eFXDM6uPP4+cTH4SiKdBEdwjJkOBRPKF9Y1erkd2y4cZmThg1tXT/B3cqvJyEKFhNnmb8ev+/QhUaNGi4MWcZFmfPx6un/ow3T78DAFg+dDHuHHkLAKDR3YR/OfgEXrju95iaPgk35CzFXZ/dB4NswISUfNw96o6e1/6kdhsmp01Ehq17i71pgybj1k++g/yUXIxPzQv/m70MolGDpHcRcUYS3JE0LDxeH57542swGo040TYdbrXv9WIUX8YMteD/PZDT73FFuw6jeF8xAGBG+ySMc40OdWkUDSYaId+XoHcVcYVdsmFScaYKkCRoQoJbtetdDhFFuwaOYYYbAzNMamobYTQY4FFt4I+diK6aQ4NQ2EEYTjxzh0lTiwMA4FHZhUJEA0AD0MxWZjgxMMOktbUdAOBhdywRDRTOlA0rBmYYeH0+dHY5AeBclywR0QBoZQsznBiYYVBb14Sv5yJ7GZhENECEk2OY4cTADIP6+iaYTN2XvDIwiWjAdDEww4mBGQZtHZ2QJAk+zQyNW3oR0UBhCzOsGJhh0NnZPX7pUy06V0JEMcXJMcxwYmCGQXtHFwDAr5l1roSIYgq7ZMOKgRliQoieFqYiGJhENIDYJRtWDMwQ83i88Pn8ANjCJKIBpgLCw9AMFwZmiHV0dkE7d00JA5OIBlwXxzHDhYEZYs0tbTAau2fG+jWTztUQUczhOGbYMDBDrKPLCYOhOzAVtjCJaKC5GZjhwsAMMa/b1/O1n5N+iGigMS/DhoEZYi6Pp+drVTPqWAkRxSQGZtgwMEPM5e4NTI0/biIaaAzMsOEZPMQ8Hi8AQBMSAEnfYogo9jAww4aBGWKKogAAhOCPmohCQDAxw4Vn8RBT/N0bvLI7lgZCl8GldwlEcYtn8RBTte6LijW2MGkAlCacRqO5We8yKJJw3YKw4Vk8xBS1u0tWE9zWi66ekICdqQfhkb16l0KRgj2yYcPADDFV6f74Jzjhh67QsLHDA257DF7sSTkMwTMlUVgxMENMPdfC5AxZ+iaXR4MIYsJGesYgTJ83A5ra2/dWZ21ESUJ5KMujaMHPTWHDwAwhIQSUcyc5iQMN9A31rX68/2VbUMdOKJyAnNE5AQFblFSCZlNriKqjqGHhh/FwYWCGkKZp0M5N+pEkfgykvtZ+7sDJSk//BwKYd/MC2BNsPbeFJLAz9SC8ku8Sz6KYZ2dghgsDM4RkWYYkdf8ys4VJF6IJ4A/vNqDTpfZ7rMlswrwVCwOuu3MZ3dibeiSUJVKkY2CGDQMzhCRJgizJ575mC5MurLVDxf+sbwpqPHNI9hBMmTsNmtobsDXWepy0nw5liRTJbAzMcGFghpjB0P3LLLOFSZdwqNSFTbvagzq2YOYkZI0cGhCwR5KPo9XUFqLqKKKxhRk2DMwQk+RzLUxOZaN+vP1JK8qr+x/PlCQJC1YshNVq6blPkwR2ph6AT/KHskSKNGZAMjIww4WBGWIGuXvBAkliC5MuTdWANWsb4XT3P55ptphx3YoFAa3MLqML+1KKQlkiRRp2x4YVAzPE5K+7ZCUBGf2fCCm+NbUp+N/3g1v6LmtYFibPmgxV6f29qrLV4pS9MlTlUaRhd2xYMTBD7OtJPwBglNldRv3bd8KJLXuDG8+cPGcqMoZlBrQ0DyYXo83YEaryKJIwMMOKgRliRmPvGrJGji9RkN78uBVn6vpfL1aSJCy6dTEsVnPPfZqkYUfaAfgl5RLPpJjALtmwYmCGmNXSeyJjC5OC5VcF1rzTCI+3/7Fvi9WCa2+Y17NIBgB0GrtwIPloKEukSJDCU3g48acdYufPZGRg0uWob/XjpY3BjWcOHZWDghkFAevNnrFXo8JWFaryKAJIg3kKDyf+tEPMarX2fG3kEmZ0mXYe7cK2g8GNR06bV4jBWYMCxjP3Jx9Fu6EzVOWR3oZw28BwYmCG2Pldsia2MOkKvLq5BdWN/X/YkiQJC29dDLPZ1HOfKqvYmXYACmdoxya2MMOKP+0Qs1o5hklXx+sXWP1OA7y+/sczbQl2zL3+2oCu2XZTJw4lHwtliaQHM4BkTvoJJwZmiNmslp4uMosc3K4URN9U0+THK5uCG88cNnYExhdOCAjN8oRKVFprQlUe6WFQ7+YOFB4MzBBLSU6Ceu7EZTG4da6Gotn2w1346khw45EzFlyD9Iz0gPHMfSlH0GnoClV5FG4cvww7BmaIDRqUCkXpvh7OJPsh89o4ugovf9iMuubgxjMX3LIIRpOx5z5FVrEz7SBUjmfGBo5fhh1/4iGWmpIEi7l3HNMis5VJV87jE1j9TiN8/v7HMxOTEzFn+bU9PRwA4DC143DyiVCWSGHCS0rCjz/xEJNlGYmJ9p7bFgPHMenqnG3w4Y2PW4M6duS4kcibkhcwnlmWUIFqS12oyqNwGcLTd7gZ+z+ErlZyciKcru6WpTVKxjEVXxcq9/4e7rZKQJIwavbfwZo0DOU7/h0+ZwPMCZkYO+/XMJqTAp7nczahYvdT8HscACQMyb0Jmfm3AwCqD7+E9tr9sKeNxei5fw8AaKn4FIqvs+cYCs4n+zswcbQVswsS+z125uJZaKptRIej93rOPalHkNacggTVfolnUsSSwTFMHfAjShgkJyb0fB0tXbJVB55HcvY1mLTyfzHxxmdhTR6OuuN/QXLWNEy+5SUkZ01D/fG/9H2ibMCw6X+DSStewITrn0Zj2Ua42yuh+Jzoaj6BgpufgxAqXG0V0BQvmiu2Ysi4leF/gzHgxfeb0ejo/1IlWZax8JbFkA29J1i/7MfO1APQuLF5dMqUIVk4QzbcGJhhkJzc2wqwGlw6VhIc1e9EZ1MxBo+5AQAgG0wwmhPRVrMLg0YvAwAMGr0MjupdfZ5rtqUjIT0XAGAw2WFLHg6fqwWSJEFoCoQQ0FQfJNmI+pK1yMi7DbLMjo4r4fJqWPNOIxS1/83Jk1KTMHPxLKhq74SfFnMbipJKQlkihcpI/p/RAwMzDFJTey8tsRmdkCL8U723qx5GSwrO7PlvHNv8E5zZ83uoigeKpw1mWzqA7mBUPJfegsrb1QCXoxyJg/NhMNmROuw6HP/op7AkZMFgSoCzpRRpw+aG4y3FrNO1Xvx5a3DjmWMnjsXYiWMDFmkvSShHraUhVOVRiEij2B2rBwZmGAwbmgm/v7vrTJZExLcyhabC5TiFIbkrUHDTs5CN1gt3v16C6nej/KvHMbzwQRhM3V3S2RO/jYKbnsXwwr9BbdGryJl8H5rKP0L5V0+itvitULyVuLB5dzsOnnQGdezsZXORnJbSe4cE7E49DFeUDBXQOWxh6oKBGQapKUmwnbcIu90Y2Ythm+2DYbYPRuLg8QCAtOHz4HKcgtGaCp+7uzXjc7fCaE254PM1TUH5V48jfdRipA2/rs/jrtZTAABL8jC0VHyKsfP+Ce72M/B0ciWaK/U/65vQ0t7/Nb4GgwELVy6EJPf+1/fJPuxKPcjxzGiRIkFK5albD/yph4Esyxg0qDdc7MbIXm3FZEuH2T4Eno5qAEBHw2FYk0cgNWcOWio+AQC0VHyC1Jy+3alCCFTu+T2sycORNf7OC75+zdHXMHTyfefGNLtP0pIkQ1P63zCZLqzLreEPaxugBjGemTIoFTMXzoSq9I5nNllacSyxNJQl0kAZxdalXhiYYTI4Pa3n64QID0wAGDHjb3F613/i2Ka/hdtxGtkF9yB74t3oqD+Iox/8NTrqDyJ74t0AAJ+rBaXbfgMA6Go+hpYzn6Kz4QiObf4Jjm3+Cdpq9/a8rqN6JxLS82C2D4LRnIjEweNxbNPfAgDsaWPC/0ZjSGmVF2s/dwR1bO7kcRiVPypgPPNYYhnqzU2hKo8GiDSS45d6kcT5i01SyOzZfxRf7jwASZKgCQlHWq+F4OcVGmASgH+4NwtTcvu/vlJVVGx87X04O3vHP62qBTc0L4BNs17imaQn6WeJkIYyNPXAM3aYjB09DH5f9xiTLAnYDMFN0iC6HALAc+ua4OgMYjzTaMD8FQsDdrzwGLzYnXoIGvg5OiJZAGTxtK0X/uTDZFB6Kmw2S8/tRNOlL8kgulIdThV/fLcRmtZ/6KVnpKNw/oyA8cwGSzNOJJwKZYl0pUYaIclcsEAvDMwwkSQJgwal9txOMrXpVgvFvuNnPFj3RVtQx+ZPG4/huSMCtgIrTipBk6klRNXRlZLyOeFHTwzMMBo8qHfiT6KpPeIXMKDotm67A8crgru+ct5N82E/b5MAIQE70w7CK/W/lRiF0UST3hXENQZmGI0Ylg3l3NJkBklDQoRfj0nRTQjgj+81osPZ//6XRpMR81csDLjPbfBgT+ohCI5nRoYsmddf6ow//TAaN3YE5PMmWCSZgrsEgOhKOTpVPLeuEcFMhh+cNRjTrpseMJ5Za23EyYTToSyRgjWBrUu9MTDDyGw2ITNjUM9tjmNSOBSdcmPjjuAmmU2cUYCc0TkBAXsk6QRa+OFOd9IEjl/qjYEZZkOzhvR8nWDshCz1P/2f6Gq981kryqqC27x8/oqFsNp7r8MUksDO1APwcTxTP6kSpOEMTL0xMMNszJgR8Pu7Q1KSgCRjm74FUVxQNWDN2kY43f2PZ5rMJsy/eUHAyKXT6MbelKLQFUiXVsDu2EjAwAyzUcOzYbH0/vKnmjl1n8KjpV3B/6wPbum7jJxMTJ49JWA8s9pWhzJ7RajKo0uQJjMwIwEDM8xkWUb2ed2yKeZWgJeXUJgcOOnCR7uDG8+cPGsyskZkBYxnHko+jlYjF90IqxQJGMGl8CIBA1MHw4Zm9pyEjLKCJGOHzhVRPHlrawtO1/S/M4wkSViwchEstt7xTE3SsDPtAPySP5Ql0vkmmQKWLyT9xG1g5ufn45e//GXPbUVRMGfOHDz44IOXfN6ePXv6PaY/UyflB3R1pVqar+r1iC6HogJr1jbA5em/Z8NitWDeTfMDWpldRif2cTwzbKRZZr1LoHPiNjDtdjvKysrg8XTPHNyxYwcyMzPD8r2TkhICLi9JNTcDvDicwqjRoeDF94Mbz8wanoWCmZOgqr0f8s7aalFuqwxVefS10QZIGeyOjRRxG5gAsGDBAmzbtg0A8OGHH2LFihU9jxUVFWHVqlW4/fbbsWrVKpw+3ffibZfLhV//+te46667cPvtt+OTTz4J+nuPGDG051O7SfbzmkwKuz3HnfhkX3DDAVPnTkNmTmZAS/NgSjHaOJwQUtJsti4jSVwH5s0334xNmzbB6/Xi5MmTmDp1as9jY8aMweuvv47169fj5z//OZ5++uk+z3/++ecxZ84cvPvuu3j11Vfxu9/9Di6XK6jvPW1yPhSl9xrMNG7cSzp4/eMWnK0PcjzzlkUwW3tP4KqkYWfqASi8ljg0EiReThJh4vpK2PHjx6O6uhobN27EwoWB62h2dnbiV7/6FSorKyFJEvz+vpMcvvrqK3z22Wf405/+BADwer2oq6vD2LFj+/3e6WkpyMwYjFZH94zDNHMzqp1joYHdLxQ+fkVg9TuNePzBHFjNl/78bLVZce3187Btw2c9W0x1mLpwILkYs9unhaHaODPDBMnIyT6RJK5bmACwZMkS/Od//mdAdywAPPPMM5g9ezY2btyI5557Dj7fhVc5Wb16NTZs2IANGzZg27ZtQYXl10aP7F2CzCCrSLWwlUnhV9fix8sbg5t4ljM6B+MLJ0BTeycMVdircMZWHary4pMESLMt/R9HYRX3gfmtb30LDz30EPLz8wPu7+zs7JkEtG7dugs+d968eXj99dd7Qu/48eOX9b0Lp00ImC072FJ/Wc8nGihfFXVh+6Hgds8pnD8Dg7IGB4xn7k8uQoehK1TlxZ9cI6T0uD89R5y4/xfJysrC/fff3+f+H/3oR/jv//5vrFq1KmB24PkeeughKIqCW2+9FStXrsQzzzxzWd87OSkRw4Zl9dxONHXCanBe3hsgGiCvbGpGTVP/68VKkoSFtyyC0dw7vqbIKnamHYCC/pfeo/5xsk9kkkQw+/5QyBQdPYnNn+yA0dg9dtnoHopqV/DdukQDaXiGGf/2N0NhNvX/Wbqq/Cy2bfgcBmPvuHuucySu6ZgSyhJjX7IE6R+SIBk4fhlp4r6FqbdJBeNgt/WOVaRbGiHxUzrppKrRh1c3B7e+8fCxI5A/bXxAD8yphEqctdaGqry4IM01MywjFANTZ7IsY9zYkQFL5aWZufIP6efzg53YdTS48chrFs1EekZ6wH37Uo6gi0MLV8YuAXM52SdSMTAjwMwZkwM+pQ+x1ulYDRHw4gdNqG/pf71YWZaxcOUiyIbeU4lfVrAj9QBU9pRcNmmeGZKFrctIxcCMAIPSUzBsaO/knwRTJxK5IwTpyOMTWLO2AX6l/ykOiSlJmLtsLlSt91ITh7kdR5JKQlli7LFLwLVsXUYyBmaEKJgwFsp5rcxMW5WO1RABZ+p8eHNLcOOZI/NHI7cgN+D6zNLE06jhpVJBY+sy8jEwI8TkgnFIsNl6bqeYHbzEhHS3ZW8H9p0I7vdw9tI5SBmUEnDfntTDcMruUJQWW9i6jAoMzAhhMBgwZVIetPO6tbLYyqQI8MKGJjQ5ghzPvGUxZLn3tOKT/diVdgAaN0m/JLYuowMDM4LMnTUV5vMuBk8zN8HMT+ekM5dHw5q1jVDU/sczk9OSMXPxrIBJbM1mB44mnQxlidGNrcuowcCMICaTERPyx/RcYiJJQKatRueqiIDyGi/+8mlrUMeOLcjFmAljA3pLTiScQp25MVTlRTW2LqMHAzPCzJszHZLU+59nkKUBRqn/5cqIQm3TznYcLg1u+7o5y+ciKTWp9w4J2J16CG7ZE6LqolQCW5fRhIEZYex2G/JzexcykCUN2XbubE/6EwCeX9+I1o7+9780GAxYuHJxzzZgAOA1+LAr9SA0cDXOr0k3Wdm6jCIMzAg079rCgJ0gBlvqYZGD+2RPFEqdLg3PvtsITes/9FIHp2LGwpkBO/I0WlpwPLE0lCVGj5EGoJAbREcTBmYESk1JDlguT5KAofYz+hZFdE5JpQfvbnMEdWze5DyMzBsZMJ5ZnFiKhjhf/lFIAtJttoDhF4p8DMwItXjBzIDbaZYWJBg7dKqGKNCGL9tQfDq4GdzX3TgfCcmJvXdIwK7Ug/DI3hBVF/mkuRZI2Yb+D6SIwsCMUCnJSZg0ITegazbHXqFjRUS9hACee68R7V1BjGcaDVi4YkHAfR6DF7tTD0HE4XimliAgLbfqXQZdAQZmBFu0YCYMht5PoYmmDqSYgluqjCjU2rpU/PG9pqDGM9MzB2P6vBkB45n1liacSDgVyhIjkuFmOyQru2KjEQMzglktFsyYNhHqeetzDrVXQOKqKRQhik+78f5XbUEdO6FwAoaPHR7Qa3I06SSaTMFd3xkLxEgZUqFZ7zLoCjEwI9x1c6Yhwd7bfWMzupFhq9axIqJA737uQEllkOOZN82HPaF3zWQhCexKOwhvHFxrLCQB+Xa73mXQVWBgRjiDwYC5s6YG7GSSbaviknkUMTQB/GFtIzqd/e9/aTKbMH/lou5B0HNcBjf2pB4OXYERQppvgZTFiT7RjIEZBaZPnYCMwWk9t2VJw/CEch0rIgrk6FTx/PrGgO7WixmcNRhT5k4LGM+stTbgpP10KEvUlZoBTvSJAQzMKCBJEq5fel3AtWwpZgdSzU06VkUU6HCZG5t2BrfxecHMSRg6KicgYI8kH0eLqS1E1elHNWgwfjcRkpETfaIdAzNK5GRnoOAbl5kMTyiHQep/Wj9RuLz9aStOVfe/XqwkSZi/YgGstt5WlyYJ7Ew9AJ/U/1Zi0UReYYOUwa7YWMDAjCLLF8+F1dK7ULNJ9nMFIIooqtY9nul09z+eabaYMe/m+QEfAp1GF/alHAlliWHlH6PBMJddsbGCgRlFTCYjFi8IXJtzsKUOicY2/Yoi+oamNgX/+35wwwWZw7IwedbkgN/pKlsdTsXAB0G/VYH5r1L0LoMGEAMzyhRMyMWI4dk9tyUJGJV4EoYY68ai6LbvhAtb9gQ3njl5zlRkDc8KaGkeTD4GhzG450ciAQHTXyVDSuApNpbwXzMK3XT9PJy/ZrPZ4OOsWYo4b25pxZm6/teLlSQJC25ZBIu194J+TdKwM+0A/FE6Rq/ONkAex51IYg0DMwqlJCdh/tzAZcbSLU1I4472FEH8qsCadxrh9va/MpXFasF1N84PmAneaXRif3JRKEsMCV+6AtPKxP4PpKjDwIxS1xQWYMTw7IBurBEJp2DmjvYUQepb/Xjpg+DGM7NHDkXBjAJo5y0FWWmvwWnb2VCVN+B8Jj8sP0rjJSQxioEZpSRJwq0rFsNi7u3GMsgqRiWeBOJwBwiKXLuKnfj8QHBb002bV4jB2YMDPggeSClGu7EzVOUNGFVSYfp+MqQ0nlZjFf9lo5jdZsX1S68NWJw90dSBLFuVjlUR9fXq5hZUN/a/XqwkSVh4yyKYzb3jf6qkYmfqASjo/1IVPbmvFzCM4cLqsYyBGeXyx41CwfgxAWM/2bZKJMfRDhAU+XyKwOp3GuD19T+eaUuwY+4N1wV0zbabOnEwpTiUJV6VtgIXkhcN0rsMCjEGZgy4Ydk8pCQn9dzuvtSkBBYu0E4RpKbJj//b1BzUscPGDMf4wgkBoXnafhaV1sjbqactswtp383SuwwKAwZmDDAaDbh1xSLI511rYpRVjEk6DhnROS2fYtMXh7vw5ZHgxiNnLLgG6RnpAeOZ+1KK0GnoClV5l63T7kLq32ZDkjjJJx4wMGNEVsZgLF08J+ATuc3owsjEMh2rIurr/z5sRm1zcOOZC25ZBKPJ2HOfIqvYkXYAagSMZ3qMXiT+ZDBkC0+j8YL/0jFkSkEepk7Jh3reeGaapRmZVk4Cosjh8XVfn+nz9z+emZiciDnLAye2tZk6cDj5eChL7JciKZC/Z4chnYsTxBMGZoxZvngucjKHBHRjDbWf4SQgiihnG3x4/eOWoI4dOW4k8qbkBfSelCWcQZWlLlTlXZIiqXDdAVjHcXGCeMPAjDGSJOHO25fDft62SZIEjE46Absh8q9lo/jx6f5O7DkW3HjkzMWzkDYkNeC+vamH0WVwhaCyi1OhonWpE6kzOSM2HjEwY5DNasHttywNmIhgkDSMTT7GmbMUUV58vxmNrf1vHCDLMhasXAzZ0LuvpF9WsDP1AFT037U7EFSoqJ7TjKylw8Py/SjyMDBj1NCsIbh+8Vxoau/kCJPsR25yMYxS/xMuiMLB5dWwZm0jFKX/1amSUpMwe2ngxLZWcxuKkk6EskQAgAoNZ69pxOjb8kL+vShyMTBj2KSCcZh/3YyAE4zF4EFucjHkKN0FgmLP6Vov3vokuPHM0eNHY2zB2ICFOk4mnEaNpSFU5UGDhsrp9Rh71/iQfQ+KDgzMGDdn5lRMnzohYGcTu9GJMYknIIWpK4uoPx/t7sDBk86gjp21dA6S087bmFkC9qQegisEww0aNJyZUo/cuycM+GtT9GFgxoGli2Yjf9yogKn5yeY2LtROEeV/1jehpb3/ng+DwYCFKxdCkntPXz7Zj11pB6EN4IdADQIVBfXI/Q7DkroxMOOAJEm45eZFGDY0I+BykzRLM0OTIkaXW8Mf1jZAVfv/fUwZlIqZC2dCPW+MvsnciuLE0gGpRYWK0wXVyP0uu2GpFwMzTsiyjG/fcQPSUpMDQjPd0sTQpIhRWuXFO587gjo2d/I4jM4fHTCeeTyxDPXm4PbfvBiv5EPJ9EqM+24Bl7yjAAzMOGIyGfGdb9+M5KQEhiZFrI1ftaHoVHDXV869/jokpfRuPAAJ2JV6EO4r3Ei9U3biWOFpTPr2NIYl9cHAjDN2mxX33rMSSYl9Q3N0YgknApHuBIDn3muEozOI8UyjAQtWLgoIN6/Bh92ph6Bd5gfAJmMryufXYsZdsxiWdEEMzDhkt9tw36qVfVqaaZZmjE7i7FnSX4dLw7PvNkLT+g+9tCFpKFwwI2AmeIOlGScuY+OBKksdHLe6UXjjNQxLuigGZpyy22347t0rkJKcGBCaqeZW5CYXwyD1v/oKUSidOOPBuu3BjWfmTx2PEeNGBPwuFyeeRKO5/+s7SxNOA39lw/iZE6+4VooPDMw4lpBgx72rbkFqSlLAiSbJ1I685CKYr3AciGigrPuiDccqgru+8rob58OeaO+5Lc6NZ3pk7wWP1yBwJO0E0n+Yg5F5IwekXoptDMw4Z7NacO+qlRiUnhIw29BmdCE/5TBsXLCddCQE8Md3G9Hh7H//S6PJiIUrFwbc5zZ4sCflMMQ3xjM9khe7sw9h3IMFyBiaMaA1U+xiYBKsFgvuW3UrRg7LDthL0yT7kZdSxK3BSFdtXSqee68xoBfkYtIzB2PaddMDxjPrrI0oSSjvud1kbMXu/COY9eB1SDx/hi1RPyQRzG8hxQUhBDZv/QrFx8pgMBrOux8468xFizdbx+oo3t2zNB23zk8N6tjP1n2CurN1PRN4JCFhacu1aDK2omVqJ+bdsgCyzPYCXR4GJvWxY9ch7NxzKGArJQBocA9FjWs02DFBejDIwL98fyjyRlj7Pdbv8+ODVzfA4+odh5c0CVOum4qCmZNCWSbFMAYmXVDxsTJ8/OlO4Bsz7Lv8yajoHA+/sOhTGMW1QSlGPPlgDhLthn6PbaxtxNa1WwAhYLVaMH/lQmTkZIahSopVDEy6qDOVtVj/4WcB63UCgF8zoaJzArqUlIs8kyh0CvPteOQ7WUEdW7z3KOoqa7Hw1sUwW8whroxiHQOTLqnV0YH3NmyFo70jYMxHCKDGNRqNnmE6Vkfx6t4bBuGmufzARuHFwSi6pPS0ZHz/3tuRnzsyYOahJAHDEiowOvEEN6OmsDtc5gpq1izRQGILk4K2/2Axtn91oM+4ple14kxXHpzsoqUQkyXgzkVpuG1+KmSZS9hReDEw6bJU1zZiw8ZP4fZ4A9bcFAJo9OSg1jUKgh0XFAJm2Y37bkjEktlclYf0wTMbXZZhQzPww+/diaHZGX26aDNtNRifcgg2Q5eOFVLsERhsqcY12ScwYVSC3sVQHGMLk66IEAJ7DhzFjl2HLvCYhDr3CNS7h6NP/y3RZbDILgy3laBwQjpuvmEBTCaj3iVRHGNg0lVpaWnDB5u3obHFAcM3Vk5x+pNw1pkLt5qoU3UUvQQyrFUYnlSDZYtmYkpBnt4FETEw6eoJIfDFjv3Yf+gYvtmiFAJo8gxFrXskNMHWAfXPanBiuLUEk3JTcNP185CQYO//SURhwMCkAVNb34QPP/oCjrYOGAyBrU2/ZkK1cwwcPu4MQRdmkPzIslUiJ7EJyxbPRsGEXL1LIgrAwKQBpaoqtn+1H4eKTuBC45ed/hRUOcfCo3LyBn1NwxBrPTJM5ZiQNww3XT8PVguXXqTIw8CkkGh1dGDLZztw9mxdwM4nQG83bb17BBRh0qlCigRJJgdybKeQniSwbNEc5I8bpXdJRBfFwKSQOnHyND7/Yi+cLnef7ZRUYUCjOwcNnhyOb8YZi+xCjv00Ui0OTJ86AQuunQGjsf8F1Yn0xMCkkFMUFdu/3IdDR0sCFjvoeVwzot49HE2ebAjwpBnLLLILWfYqpBjqkJc7EssWzUFSErvnKTowMClsWlrbse3LvSivqILB0DcYfaoZde4RaPFmgmtqxJbuoDyLFLkOmZmDsXThLAwfxg3JKbowMCnsausbsf2r/aiqqoPB2Lcr1qta0ejJQYsnExpbnFHNYnAh23YWSYZ6JCfacd2caZgyKf+CPQ1EkY6BSbo5U1mDL3YeQH19c5+JQUB3V22zJxuNnqFQBPcyjCYJxg4MsdYgydCAlKQEzJg2EdcUFvQZxyaKJgxM0t3Jsgrs2H0YTU2tMF5g6TNNSGj1ZqDRk8PLUSKYBA1pliZkWGthkTuQnGjHjGkFmDF9IoOSYgIDkyKCEAJl5ZXYf+gYqqrrYbxAV60QQIc/DS3eLLT70rkrSoQwyV4MsdRhkLUesvAiJTkBM6YXoHDqBAYlxRQGJkWc+oZm7Np7BKfKz0KSpQuOd/k1E1q9Q9DizWKrUxcakk0ODLI0ItXcDFXxIzs7A1ML8jF50jgGJcUkBiZFrM5OJ3bsPoQTpRVQFOWiJ2GnkogWTxYcviFQeT1nSCUYO5B+LiSNkg8AkDt2BGYWTkJONpc9pNjGwKSI5/crOHDkGE6ePIO6xmaYLtBdCwCakNHuS0ObbzDa/elcDGGAWGQX0i1NSLc0wmLwQFFVJCXYMWH8GMy+ZgrsNqveJRKFBQOTokpTcysOHDqOU6fPwun2wHiB6zmB7olCHf40tPsGod2Xzlm2l0UgwdiBFJMDyeZW2I1OaJoGSZIwakQOxueNxsTxY9jtSnGHgUlRSdM0nDhZgeITZag8WwtJki56AhcCcCpJaPeno9OfCpeSCC6MEMgg+ZFsciDF3IpkkwNGWYEQAqqqImdoJsaNHYHpUybAbObavxS/GJgU9TxeH44cLUHFmWpU1TQAwCVbP6owoMufjE5/Crr8qXCpibjQziqxzCD5kWDsQKKpA4nGdiQYOyFJ3bOVFb+CjIxBGDNqGGZMm8il64jOYWBSTPH6fCg+fgpnKmtQVVMPr9d3wUtUzqdqBnQpKehSkuBWEuFSEmOuC9ciu5Bo6ugJSYvsxteTjxVFhclowNDsIRg+LAuTJo5DSnKSvgUTRSAGJsUsTdNQfroK5Weq0NDQgsbmVmiaCGpXDL9mgktJhFtN6P5bSYBXsyLSu3INkh9WgxtWgxM2gxM2ows2gxNGWek5RggBv09BWloyhuVkYsyoYcjLHcXdQoj6wcCkuOHz+XHq9Fmcra5DfX0zGptaISRcdOLQNwkB+DQLfJoVXtUKr2aF77y/FWFEqAPVKPlhkr0wyV6YZd+5r32wGDywGlwwyf4+z1FVFUIIDEpLxZAhacjIGIT8sSORnp4a0lqJYg0Dk+LW1wFa39CMVkc7Wh3taGvrhCY0mExXNrlF1QxQhBGqMELRTN1/n7sNIUEAEJAAdH/dfV9336hBUiFLas/f539tlBSYZC9k6dL/XTVNg9+vwG6zYtCgVGQMSUdOdiZyx46A1RJb3cxE4cbAJDqPz+dHdW0Dqmsa4HC0o629E51dTrhcHiiKApPZpPvlFF/PXtVUDVarGcnJSUhJSUJaShIGp6di5MgcpCQnckcQogHGwCQKgt+vwNHWjrr6ZrR3dqGr04nOLifcHi+8Xj+8Xh+8Ph9UVYOmaoDc3dX7dbheLLyEEOcCUIOqaYCmQTIYYJAlGGQDbHYrEu022O1W2G02JNitsCfYMCgtBUOGpCMpMYHBSBQmDEyiASKEgM/vh8fjQ1eXE+0dXfD7lXNjiIAQGoQQ0MS5oISAyWCAxWpBgs0Km80Gm80Cs8kIk8kEo9HAMCSKIAxMIiKiIET2HHkiIqIIwcAkIiIKAgOTiIgoCAxMIiKiIDAwiYiIgsDAJCIiCgIDk4iIKAgMTCIioiAwMImIiILAwCQiIgoCA5OIiCgIDEwiIqIgMDCJiIiCwMAkIiIKAgOTiIgoCAxMIiKiIDAwiYiIgsDAJCIiCsL/D1ymjSplfa25AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# medal per gender\n",
    "Sex=['Male','Female']\n",
    "cnt=[sum(df_medals.Sex=='M'), sum(df_medals.Sex=='F')]\n",
    "explode=(0,0.1)\n",
    "plt.pie(x=cnt, labels=Sex, explode=explode,autopct='%1.1f%%', startangle=90, shadow=True, colors=['#5A7FDD','#FD78F0'])\n",
    "plt.title(\"Medals per gender\")\n",
    "plt.axis('equal')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d9eb76c",
   "metadata": {
    "papermill": {
     "duration": 0.020851,
     "end_time": "2023-08-25T04:37:41.587740",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.566889",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "c04c4b94",
   "metadata": {
    "papermill": {
     "duration": 0.015847,
     "end_time": "2023-08-25T04:37:41.623017",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.607170",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# India"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "6f74f723",
   "metadata": {
    "papermill": {
     "duration": 0.064786,
     "end_time": "2023-08-25T04:37:41.702920",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.638134",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Height</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Team</th>\n",
       "      <th>NOC</th>\n",
       "      <th>Games</th>\n",
       "      <th>Year</th>\n",
       "      <th>Season</th>\n",
       "      <th>City</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Event</th>\n",
       "      <th>Medal</th>\n",
       "      <th>region</th>\n",
       "      <th>notes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>505</th>\n",
       "      <td>281</td>\n",
       "      <td>S. Abdul Hamid</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1928 Summer</td>\n",
       "      <td>1928</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Men's 110 metres Hurdles</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>506</th>\n",
       "      <td>281</td>\n",
       "      <td>S. Abdul Hamid</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1928 Summer</td>\n",
       "      <td>1928</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Men's 400 metres Hurdles</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>895</th>\n",
       "      <td>512</td>\n",
       "      <td>Shiny Kurisingal Abraham-Wilson</td>\n",
       "      <td>F</td>\n",
       "      <td>19.0</td>\n",
       "      <td>167.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1984 Summer</td>\n",
       "      <td>1984</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 800 metres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>896</th>\n",
       "      <td>512</td>\n",
       "      <td>Shiny Kurisingal Abraham-Wilson</td>\n",
       "      <td>F</td>\n",
       "      <td>19.0</td>\n",
       "      <td>167.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1984 Summer</td>\n",
       "      <td>1984</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 4 x 400 metres Relay</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>897</th>\n",
       "      <td>512</td>\n",
       "      <td>Shiny Kurisingal Abraham-Wilson</td>\n",
       "      <td>F</td>\n",
       "      <td>23.0</td>\n",
       "      <td>167.0</td>\n",
       "      <td>53.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1988 Summer</td>\n",
       "      <td>1988</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Seoul</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 800 metres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>264139</th>\n",
       "      <td>132177</td>\n",
       "      <td>Mohammad Anas Yahiya</td>\n",
       "      <td>M</td>\n",
       "      <td>21.0</td>\n",
       "      <td>177.0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>2016 Summer</td>\n",
       "      <td>2016</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Men's 4 x 400 metres Relay</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>265876</th>\n",
       "      <td>133029</td>\n",
       "      <td>Thyadathuvilla Chandrapillai \"T. C.\" Yohannan</td>\n",
       "      <td>M</td>\n",
       "      <td>29.0</td>\n",
       "      <td>174.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1976 Summer</td>\n",
       "      <td>1976</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Montreal</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Men's Long Jump</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266934</th>\n",
       "      <td>133554</td>\n",
       "      <td>Sayed Muhammad Yusuf</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1928 Summer</td>\n",
       "      <td>1928</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>270912</th>\n",
       "      <td>135480</td>\n",
       "      <td>Geeta Zutshi</td>\n",
       "      <td>F</td>\n",
       "      <td>23.0</td>\n",
       "      <td>167.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1980 Summer</td>\n",
       "      <td>1980</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Moskva</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 800 metres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>270913</th>\n",
       "      <td>135480</td>\n",
       "      <td>Geeta Zutshi</td>\n",
       "      <td>F</td>\n",
       "      <td>27.0</td>\n",
       "      <td>167.0</td>\n",
       "      <td>51.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1984 Summer</td>\n",
       "      <td>1984</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Athletics</td>\n",
       "      <td>Athletics Women's 3,000 metres</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1408 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            ID                                           Name Sex   Age  \\\n",
       "505        281                                 S. Abdul Hamid   M   NaN   \n",
       "506        281                                 S. Abdul Hamid   M   NaN   \n",
       "895        512                Shiny Kurisingal Abraham-Wilson   F  19.0   \n",
       "896        512                Shiny Kurisingal Abraham-Wilson   F  19.0   \n",
       "897        512                Shiny Kurisingal Abraham-Wilson   F  23.0   \n",
       "...        ...                                            ...  ..   ...   \n",
       "264139  132177                           Mohammad Anas Yahiya   M  21.0   \n",
       "265876  133029  Thyadathuvilla Chandrapillai \"T. C.\" Yohannan   M  29.0   \n",
       "266934  133554                           Sayed Muhammad Yusuf   M   NaN   \n",
       "270912  135480                                   Geeta Zutshi   F  23.0   \n",
       "270913  135480                                   Geeta Zutshi   F  27.0   \n",
       "\n",
       "        Height  Weight   Team  NOC        Games  Year  Season            City  \\\n",
       "505        NaN     NaN  India  IND  1928 Summer  1928  Summer       Amsterdam   \n",
       "506        NaN     NaN  India  IND  1928 Summer  1928  Summer       Amsterdam   \n",
       "895      167.0    53.0  India  IND  1984 Summer  1984  Summer     Los Angeles   \n",
       "896      167.0    53.0  India  IND  1984 Summer  1984  Summer     Los Angeles   \n",
       "897      167.0    53.0  India  IND  1988 Summer  1988  Summer           Seoul   \n",
       "...        ...     ...    ...  ...          ...   ...     ...             ...   \n",
       "264139   177.0    69.0  India  IND  2016 Summer  2016  Summer  Rio de Janeiro   \n",
       "265876   174.0    62.0  India  IND  1976 Summer  1976  Summer        Montreal   \n",
       "266934     NaN     NaN  India  IND  1928 Summer  1928  Summer       Amsterdam   \n",
       "270912   167.0    51.0  India  IND  1980 Summer  1980  Summer          Moskva   \n",
       "270913   167.0    51.0  India  IND  1984 Summer  1984  Summer     Los Angeles   \n",
       "\n",
       "            Sport                                   Event Medal region notes  \n",
       "505     Athletics      Athletics Men's 110 metres Hurdles   NaN  India   NaN  \n",
       "506     Athletics      Athletics Men's 400 metres Hurdles   NaN  India   NaN  \n",
       "895     Athletics            Athletics Women's 800 metres   NaN  India   NaN  \n",
       "896     Athletics  Athletics Women's 4 x 400 metres Relay   NaN  India   NaN  \n",
       "897     Athletics            Athletics Women's 800 metres   NaN  India   NaN  \n",
       "...           ...                                     ...   ...    ...   ...  \n",
       "264139  Athletics    Athletics Men's 4 x 400 metres Relay   NaN  India   NaN  \n",
       "265876  Athletics               Athletics Men's Long Jump   NaN  India   NaN  \n",
       "266934     Hockey                     Hockey Men's Hockey  Gold  India   NaN  \n",
       "270912  Athletics            Athletics Women's 800 metres   NaN  India   NaN  \n",
       "270913  Athletics          Athletics Women's 3,000 metres   NaN  India   NaN  \n",
       "\n",
       "[1408 rows x 17 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df.NOC=='IND']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "02f94dfb",
   "metadata": {
    "papermill": {
     "duration": 0.0445,
     "end_time": "2023-08-25T04:37:41.764350",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.719850",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_india = df[df.NOC=='IND'].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "768c7829",
   "metadata": {
    "papermill": {
     "duration": 0.031698,
     "end_time": "2023-08-25T04:37:41.811732",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.780034",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID           0\n",
       "Name         0\n",
       "Sex          0\n",
       "Age        150\n",
       "Height     517\n",
       "Weight     539\n",
       "Team         0\n",
       "NOC          0\n",
       "Games        0\n",
       "Year         0\n",
       "Season       0\n",
       "City         0\n",
       "Sport        0\n",
       "Event        0\n",
       "Medal     1211\n",
       "region       0\n",
       "notes     1408\n",
       "dtype: int64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_india.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "78e4ca49",
   "metadata": {
    "papermill": {
     "duration": 0.02872,
     "end_time": "2023-08-25T04:37:41.856831",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.828111",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# drop columns which are not useful \n",
    "df_india.drop(columns = ['notes','Height','Weight','region'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "ff0a7c17",
   "metadata": {
    "papermill": {
     "duration": 0.046104,
     "end_time": "2023-08-25T04:37:41.918493",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.872389",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>Team</th>\n",
       "      <th>NOC</th>\n",
       "      <th>Games</th>\n",
       "      <th>Year</th>\n",
       "      <th>Season</th>\n",
       "      <th>City</th>\n",
       "      <th>Sport</th>\n",
       "      <th>Event</th>\n",
       "      <th>Medal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4732</th>\n",
       "      <td>2699</td>\n",
       "      <td>Shaukat Ali</td>\n",
       "      <td>M</td>\n",
       "      <td>30.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1928 Summer</td>\n",
       "      <td>1928</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4736</th>\n",
       "      <td>2703</td>\n",
       "      <td>Syed Mushtaq Ali</td>\n",
       "      <td>M</td>\n",
       "      <td>22.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1964 Summer</td>\n",
       "      <td>1964</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5032</th>\n",
       "      <td>2864</td>\n",
       "      <td>Richard James Allen</td>\n",
       "      <td>M</td>\n",
       "      <td>25.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1928 Summer</td>\n",
       "      <td>1928</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5033</th>\n",
       "      <td>2864</td>\n",
       "      <td>Richard James Allen</td>\n",
       "      <td>M</td>\n",
       "      <td>30.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1932 Summer</td>\n",
       "      <td>1932</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5034</th>\n",
       "      <td>2864</td>\n",
       "      <td>Richard James Allen</td>\n",
       "      <td>M</td>\n",
       "      <td>34.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1936 Summer</td>\n",
       "      <td>1936</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Berlin</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>233749</th>\n",
       "      <td>117232</td>\n",
       "      <td>Dung Dung Sylvanus</td>\n",
       "      <td>M</td>\n",
       "      <td>31.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1980 Summer</td>\n",
       "      <td>1980</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Moskva</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236445</th>\n",
       "      <td>118553</td>\n",
       "      <td>Carlyle Carrol Tapsell</td>\n",
       "      <td>M</td>\n",
       "      <td>23.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1932 Summer</td>\n",
       "      <td>1932</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236446</th>\n",
       "      <td>118553</td>\n",
       "      <td>Carlyle Carrol Tapsell</td>\n",
       "      <td>M</td>\n",
       "      <td>27.0</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1936 Summer</td>\n",
       "      <td>1936</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Berlin</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250689</th>\n",
       "      <td>125560</td>\n",
       "      <td>Max \"Maxie\" Vaz</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1948 Summer</td>\n",
       "      <td>1948</td>\n",
       "      <td>Summer</td>\n",
       "      <td>London</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266934</th>\n",
       "      <td>133554</td>\n",
       "      <td>Sayed Muhammad Yusuf</td>\n",
       "      <td>M</td>\n",
       "      <td>NaN</td>\n",
       "      <td>India</td>\n",
       "      <td>IND</td>\n",
       "      <td>1928 Summer</td>\n",
       "      <td>1928</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Amsterdam</td>\n",
       "      <td>Hockey</td>\n",
       "      <td>Hockey Men's Hockey</td>\n",
       "      <td>Gold</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>197 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            ID                    Name Sex   Age   Team  NOC        Games  \\\n",
       "4732      2699             Shaukat Ali   M  30.0  India  IND  1928 Summer   \n",
       "4736      2703        Syed Mushtaq Ali   M  22.0  India  IND  1964 Summer   \n",
       "5032      2864     Richard James Allen   M  25.0  India  IND  1928 Summer   \n",
       "5033      2864     Richard James Allen   M  30.0  India  IND  1932 Summer   \n",
       "5034      2864     Richard James Allen   M  34.0  India  IND  1936 Summer   \n",
       "...        ...                     ...  ..   ...    ...  ...          ...   \n",
       "233749  117232      Dung Dung Sylvanus   M  31.0  India  IND  1980 Summer   \n",
       "236445  118553  Carlyle Carrol Tapsell   M  23.0  India  IND  1932 Summer   \n",
       "236446  118553  Carlyle Carrol Tapsell   M  27.0  India  IND  1936 Summer   \n",
       "250689  125560         Max \"Maxie\" Vaz   M   NaN  India  IND  1948 Summer   \n",
       "266934  133554    Sayed Muhammad Yusuf   M   NaN  India  IND  1928 Summer   \n",
       "\n",
       "        Year  Season         City   Sport                Event Medal  \n",
       "4732    1928  Summer    Amsterdam  Hockey  Hockey Men's Hockey  Gold  \n",
       "4736    1964  Summer        Tokyo  Hockey  Hockey Men's Hockey  Gold  \n",
       "5032    1928  Summer    Amsterdam  Hockey  Hockey Men's Hockey  Gold  \n",
       "5033    1932  Summer  Los Angeles  Hockey  Hockey Men's Hockey  Gold  \n",
       "5034    1936  Summer       Berlin  Hockey  Hockey Men's Hockey  Gold  \n",
       "...      ...     ...          ...     ...                  ...   ...  \n",
       "233749  1980  Summer       Moskva  Hockey  Hockey Men's Hockey  Gold  \n",
       "236445  1932  Summer  Los Angeles  Hockey  Hockey Men's Hockey  Gold  \n",
       "236446  1936  Summer       Berlin  Hockey  Hockey Men's Hockey  Gold  \n",
       "250689  1948  Summer       London  Hockey  Hockey Men's Hockey  Gold  \n",
       "266934  1928  Summer    Amsterdam  Hockey  Hockey Men's Hockey  Gold  \n",
       "\n",
       "[197 rows x 13 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_india_medals = df_india[df_india.Medal.notna()]\n",
    "df_india_medals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "e5d53e0e",
   "metadata": {
    "papermill": {
     "duration": 0.030528,
     "end_time": "2023-08-25T04:37:41.964991",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.934463",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_india.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "5fa48bc9",
   "metadata": {
    "papermill": {
     "duration": 0.458678,
     "end_time": "2023-08-25T04:37:42.439969",
     "exception": false,
     "start_time": "2023-08-25T04:37:41.981291",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Medals per Age')"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1080 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# medals per age\n",
    "plt.figure(figsize=(20, 15))\n",
    "sns.countplot(x='Age', data=df_india_medals)\n",
    "plt.style.use('seaborn')\n",
    "plt.title('Medals per Age')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "7d25a139",
   "metadata": {
    "papermill": {
     "duration": 0.182731,
     "end_time": "2023-08-25T04:37:42.642666",
     "exception": false,
     "start_time": "2023-08-25T04:37:42.459935",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-1.1050165198944648,\n",
       " 1.1052339591584062,\n",
       " -1.1104703289540985,\n",
       " 1.19047584135804)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Participants per gender in India\n",
    "Sex=['Male','Female']\n",
    "cnt=[sum(df_india.Sex=='M'), sum(df_india.Sex=='F')]\n",
    "explode=(0,0.1)\n",
    "plt.pie(x=cnt, labels=Sex, explode=explode,autopct='%1.1f%%', startangle=90, shadow=True, colors=['#5A7FDD','#FD78F0'])\n",
    "plt.title(\"Athletes per gender\")\n",
    "plt.axis('equal')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "f7613434",
   "metadata": {
    "papermill": {
     "duration": 0.19231,
     "end_time": "2023-08-25T04:37:42.856557",
     "exception": false,
     "start_time": "2023-08-25T04:37:42.664247",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-1.1074567666979032,\n",
       " 1.1088844477467228,\n",
       " -1.1083221334450868,\n",
       " 1.108841350947433)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# medal per gender in India\n",
    "Sex=['Male','Female']\n",
    "cnt=[sum(df_india_medals.Sex=='M'), sum(df_india_medals.Sex=='F')]\n",
    "explode=(0,0.1)\n",
    "plt.pie(x=cnt, labels=Sex, explode=explode, autopct='%1.1f%%', startangle=60, shadow=True, colors=['#5A7FDD','#FD78F0'])\n",
    "plt.title(\"Medals per gender\")\n",
    "plt.axis('equal')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "af06a5ba",
   "metadata": {
    "papermill": {
     "duration": 0.021842,
     "end_time": "2023-08-25T04:37:42.899621",
     "exception": false,
     "start_time": "2023-08-25T04:37:42.877779",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "anaconda-2022.05-py39",
   "language": "python",
   "name": "conda-env-anaconda-2022.05-py39-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 21.832734,
   "end_time": "2023-08-25T04:37:44.753941",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-08-25T04:37:22.921207",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
